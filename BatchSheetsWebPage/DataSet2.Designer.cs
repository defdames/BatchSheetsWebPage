//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace BatchSheetsWebPage {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("DataSet2")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class DataSet2 : global::System.Data.DataSet {
        
        private BATCH_SHEETS_NewDataTable tableBATCH_SHEETS_New;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public DataSet2() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected DataSet2(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["BATCH_SHEETS_New"] != null)) {
                    base.Tables.Add(new BATCH_SHEETS_NewDataTable(ds.Tables["BATCH_SHEETS_New"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public BATCH_SHEETS_NewDataTable BATCH_SHEETS_New {
            get {
                return this.tableBATCH_SHEETS_New;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            DataSet2 cln = ((DataSet2)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["BATCH_SHEETS_New"] != null)) {
                    base.Tables.Add(new BATCH_SHEETS_NewDataTable(ds.Tables["BATCH_SHEETS_New"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableBATCH_SHEETS_New = ((BATCH_SHEETS_NewDataTable)(base.Tables["BATCH_SHEETS_New"]));
            if ((initTable == true)) {
                if ((this.tableBATCH_SHEETS_New != null)) {
                    this.tableBATCH_SHEETS_New.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitClass() {
            this.DataSetName = "DataSet2";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/DataSet2.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableBATCH_SHEETS_New = new BATCH_SHEETS_NewDataTable();
            base.Tables.Add(this.tableBATCH_SHEETS_New);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private bool ShouldSerializeBATCH_SHEETS_New() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            DataSet2 ds = new DataSet2();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public delegate void BATCH_SHEETS_NewRowChangeEventHandler(object sender, BATCH_SHEETS_NewRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class BATCH_SHEETS_NewDataTable : global::System.Data.TypedTableBase<BATCH_SHEETS_NewRow> {
            
            private global::System.Data.DataColumn columnRow;
            
            private global::System.Data.DataColumn columnDATE;
            
            private global::System.Data.DataColumn columnMIXER;
            
            private global::System.Data.DataColumn columnGRADE;
            
            private global::System.Data.DataColumn columnBATCH_NUMBER;
            
            private global::System.Data.DataColumn columnINGREDIENT1;
            
            private global::System.Data.DataColumn columnINGREDIENT2;
            
            private global::System.Data.DataColumn columnINGREDIENT3;
            
            private global::System.Data.DataColumn columnINGREDIENT4;
            
            private global::System.Data.DataColumn columnINGREDIENT5;
            
            private global::System.Data.DataColumn columnINGREDIENT6;
            
            private global::System.Data.DataColumn columnINGREDIENT7;
            
            private global::System.Data.DataColumn columnINGREDIENT8;
            
            private global::System.Data.DataColumn columnINGREDIENT9;
            
            private global::System.Data.DataColumn columnINGREDIENT10;
            
            private global::System.Data.DataColumn columnINGREDIENT11;
            
            private global::System.Data.DataColumn columnINGREDIENT12;
            
            private global::System.Data.DataColumn columnLOT_NO1;
            
            private global::System.Data.DataColumn columnLOT_NO2;
            
            private global::System.Data.DataColumn columnLOT_NO3;
            
            private global::System.Data.DataColumn columnLOT_NO4;
            
            private global::System.Data.DataColumn columnLOT_NO5;
            
            private global::System.Data.DataColumn columnLOT_NO6;
            
            private global::System.Data.DataColumn columnLOT_NO7;
            
            private global::System.Data.DataColumn columnLOT_NO8;
            
            private global::System.Data.DataColumn columnLOT_NO9;
            
            private global::System.Data.DataColumn columnLOT_NO10;
            
            private global::System.Data.DataColumn columnLOT_NO11;
            
            private global::System.Data.DataColumn columnLOT_NO12;
            
            private global::System.Data.DataColumn columnAMOUNT1;
            
            private global::System.Data.DataColumn columnAMOUNT2;
            
            private global::System.Data.DataColumn columnAMOUNT3;
            
            private global::System.Data.DataColumn columnAMOUNT4;
            
            private global::System.Data.DataColumn columnAMOUNT5;
            
            private global::System.Data.DataColumn columnAMOUNT6;
            
            private global::System.Data.DataColumn columnAMOUNT7;
            
            private global::System.Data.DataColumn columnAMOUNT8;
            
            private global::System.Data.DataColumn columnAMOUNT9;
            
            private global::System.Data.DataColumn columnAMOUNT10;
            
            private global::System.Data.DataColumn columnAMOUNT11;
            
            private global::System.Data.DataColumn columnAMOUNT12;
            
            private global::System.Data.DataColumn columnLOADED_BY1;
            
            private global::System.Data.DataColumn columnLOADED_BY2;
            
            private global::System.Data.DataColumn columnLOADED_BY3;
            
            private global::System.Data.DataColumn columnLOADED_BY4;
            
            private global::System.Data.DataColumn columnLOADED_BY5;
            
            private global::System.Data.DataColumn columnLOADED_BY6;
            
            private global::System.Data.DataColumn columnLOADED_BY7;
            
            private global::System.Data.DataColumn columnLOADED_BY8;
            
            private global::System.Data.DataColumn columnLOADED_BY9;
            
            private global::System.Data.DataColumn columnLOADED_BY10;
            
            private global::System.Data.DataColumn columnLOADED_BY11;
            
            private global::System.Data.DataColumn columnLOADED_BY12;
            
            private global::System.Data.DataColumn columnMIXING_INSTRUCTIONS;
            
            private global::System.Data.DataColumn columnTYPE_OF_DRUM;
            
            private global::System.Data.DataColumn columnWEIGHT_PER_DRUM;
            
            private global::System.Data.DataColumn columnNUMBER_OF_DRUMS;
            
            private global::System.Data.DataColumn columnWEIGHT_PRODUCED;
            
            private global::System.Data.DataColumn columnREVISION_DATE;
            
            private global::System.Data.DataColumn columnFORM_VERSION;
            
            private global::System.Data.DataColumn columnMIXER_BATCH_SHEET;
            
            private global::System.Data.DataColumn columnINST2;
            
            private global::System.Data.DataColumn columnSAMPLE_AND_LABEL;
            
            private global::System.Data.DataColumn columnINGRED;
            
            private global::System.Data.DataColumn columnPOT_FORMULA;
            
            private global::System.Data.DataColumn columnBLADE_SPEED;
            
            private global::System.Data.DataColumn columnSPEED;
            
            private global::System.Data.DataColumn columnPRESS_DATA;
            
            private global::System.Data.DataColumn columnEXPIRATION_DATE;
            
            private global::System.Data.DataColumn columnSTORAGE;
            
            private global::System.Data.DataColumn columnTHEOR_WT;
            
            private global::System.Data.DataColumn columnOPER;
            
            private global::System.Data.DataColumn columnOPER_Copy;
            
            private global::System.Data.DataColumn columnAdage_Item_Code;
            
            private global::System.Data.DataColumn columnLastUpdate;
            
            private global::System.Data.DataColumn columnWhichUser;
            
            private global::System.Data.DataColumn columnNameofMachine;
            
            private global::System.Data.DataColumn columnCOMMENTS;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public BATCH_SHEETS_NewDataTable() {
                this.TableName = "BATCH_SHEETS_New";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal BATCH_SHEETS_NewDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected BATCH_SHEETS_NewDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn RowColumn {
                get {
                    return this.columnRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn DATEColumn {
                get {
                    return this.columnDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn MIXERColumn {
                get {
                    return this.columnMIXER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn GRADEColumn {
                get {
                    return this.columnGRADE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn BATCH_NUMBERColumn {
                get {
                    return this.columnBATCH_NUMBER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn INGREDIENT1Column {
                get {
                    return this.columnINGREDIENT1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn INGREDIENT2Column {
                get {
                    return this.columnINGREDIENT2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn INGREDIENT3Column {
                get {
                    return this.columnINGREDIENT3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn INGREDIENT4Column {
                get {
                    return this.columnINGREDIENT4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn INGREDIENT5Column {
                get {
                    return this.columnINGREDIENT5;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn INGREDIENT6Column {
                get {
                    return this.columnINGREDIENT6;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn INGREDIENT7Column {
                get {
                    return this.columnINGREDIENT7;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn INGREDIENT8Column {
                get {
                    return this.columnINGREDIENT8;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn INGREDIENT9Column {
                get {
                    return this.columnINGREDIENT9;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn INGREDIENT10Column {
                get {
                    return this.columnINGREDIENT10;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn INGREDIENT11Column {
                get {
                    return this.columnINGREDIENT11;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn INGREDIENT12Column {
                get {
                    return this.columnINGREDIENT12;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn LOT_NO1Column {
                get {
                    return this.columnLOT_NO1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn LOT_NO2Column {
                get {
                    return this.columnLOT_NO2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn LOT_NO3Column {
                get {
                    return this.columnLOT_NO3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn LOT_NO4Column {
                get {
                    return this.columnLOT_NO4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn LOT_NO5Column {
                get {
                    return this.columnLOT_NO5;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn LOT_NO6Column {
                get {
                    return this.columnLOT_NO6;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn LOT_NO7Column {
                get {
                    return this.columnLOT_NO7;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn LOT_NO8Column {
                get {
                    return this.columnLOT_NO8;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn LOT_NO9Column {
                get {
                    return this.columnLOT_NO9;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn LOT_NO10Column {
                get {
                    return this.columnLOT_NO10;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn LOT_NO11Column {
                get {
                    return this.columnLOT_NO11;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn LOT_NO12Column {
                get {
                    return this.columnLOT_NO12;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn AMOUNT1Column {
                get {
                    return this.columnAMOUNT1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn AMOUNT2Column {
                get {
                    return this.columnAMOUNT2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn AMOUNT3Column {
                get {
                    return this.columnAMOUNT3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn AMOUNT4Column {
                get {
                    return this.columnAMOUNT4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn AMOUNT5Column {
                get {
                    return this.columnAMOUNT5;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn AMOUNT6Column {
                get {
                    return this.columnAMOUNT6;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn AMOUNT7Column {
                get {
                    return this.columnAMOUNT7;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn AMOUNT8Column {
                get {
                    return this.columnAMOUNT8;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn AMOUNT9Column {
                get {
                    return this.columnAMOUNT9;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn AMOUNT10Column {
                get {
                    return this.columnAMOUNT10;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn AMOUNT11Column {
                get {
                    return this.columnAMOUNT11;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn AMOUNT12Column {
                get {
                    return this.columnAMOUNT12;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn LOADED_BY1Column {
                get {
                    return this.columnLOADED_BY1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn LOADED_BY2Column {
                get {
                    return this.columnLOADED_BY2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn LOADED_BY3Column {
                get {
                    return this.columnLOADED_BY3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn LOADED_BY4Column {
                get {
                    return this.columnLOADED_BY4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn LOADED_BY5Column {
                get {
                    return this.columnLOADED_BY5;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn LOADED_BY6Column {
                get {
                    return this.columnLOADED_BY6;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn LOADED_BY7Column {
                get {
                    return this.columnLOADED_BY7;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn LOADED_BY8Column {
                get {
                    return this.columnLOADED_BY8;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn LOADED_BY9Column {
                get {
                    return this.columnLOADED_BY9;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn LOADED_BY10Column {
                get {
                    return this.columnLOADED_BY10;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn LOADED_BY11Column {
                get {
                    return this.columnLOADED_BY11;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn LOADED_BY12Column {
                get {
                    return this.columnLOADED_BY12;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn MIXING_INSTRUCTIONSColumn {
                get {
                    return this.columnMIXING_INSTRUCTIONS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn TYPE_OF_DRUMColumn {
                get {
                    return this.columnTYPE_OF_DRUM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn WEIGHT_PER_DRUMColumn {
                get {
                    return this.columnWEIGHT_PER_DRUM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn NUMBER_OF_DRUMSColumn {
                get {
                    return this.columnNUMBER_OF_DRUMS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn WEIGHT_PRODUCEDColumn {
                get {
                    return this.columnWEIGHT_PRODUCED;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn REVISION_DATEColumn {
                get {
                    return this.columnREVISION_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn FORM_VERSIONColumn {
                get {
                    return this.columnFORM_VERSION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn MIXER_BATCH_SHEETColumn {
                get {
                    return this.columnMIXER_BATCH_SHEET;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn INST2Column {
                get {
                    return this.columnINST2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn SAMPLE_AND_LABELColumn {
                get {
                    return this.columnSAMPLE_AND_LABEL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn INGREDColumn {
                get {
                    return this.columnINGRED;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn POT_FORMULAColumn {
                get {
                    return this.columnPOT_FORMULA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn BLADE_SPEEDColumn {
                get {
                    return this.columnBLADE_SPEED;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn SPEEDColumn {
                get {
                    return this.columnSPEED;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn PRESS_DATAColumn {
                get {
                    return this.columnPRESS_DATA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn EXPIRATION_DATEColumn {
                get {
                    return this.columnEXPIRATION_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn STORAGEColumn {
                get {
                    return this.columnSTORAGE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn THEOR_WTColumn {
                get {
                    return this.columnTHEOR_WT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn OPERColumn {
                get {
                    return this.columnOPER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn OPER_CopyColumn {
                get {
                    return this.columnOPER_Copy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn Adage_Item_CodeColumn {
                get {
                    return this.columnAdage_Item_Code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn LastUpdateColumn {
                get {
                    return this.columnLastUpdate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn WhichUserColumn {
                get {
                    return this.columnWhichUser;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn NameofMachineColumn {
                get {
                    return this.columnNameofMachine;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn COMMENTSColumn {
                get {
                    return this.columnCOMMENTS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public BATCH_SHEETS_NewRow this[int index] {
                get {
                    return ((BATCH_SHEETS_NewRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event BATCH_SHEETS_NewRowChangeEventHandler BATCH_SHEETS_NewRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event BATCH_SHEETS_NewRowChangeEventHandler BATCH_SHEETS_NewRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event BATCH_SHEETS_NewRowChangeEventHandler BATCH_SHEETS_NewRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event BATCH_SHEETS_NewRowChangeEventHandler BATCH_SHEETS_NewRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void AddBATCH_SHEETS_NewRow(BATCH_SHEETS_NewRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public BATCH_SHEETS_NewRow AddBATCH_SHEETS_NewRow(
                        string DATE, 
                        string MIXER, 
                        string GRADE, 
                        string BATCH_NUMBER, 
                        string INGREDIENT1, 
                        string INGREDIENT2, 
                        string INGREDIENT3, 
                        string INGREDIENT4, 
                        string INGREDIENT5, 
                        string INGREDIENT6, 
                        string INGREDIENT7, 
                        string INGREDIENT8, 
                        string INGREDIENT9, 
                        string INGREDIENT10, 
                        string INGREDIENT11, 
                        string INGREDIENT12, 
                        string LOT_NO1, 
                        string LOT_NO2, 
                        string LOT_NO3, 
                        string LOT_NO4, 
                        string LOT_NO5, 
                        string LOT_NO6, 
                        string LOT_NO7, 
                        string LOT_NO8, 
                        string LOT_NO9, 
                        string LOT_NO10, 
                        string LOT_NO11, 
                        string LOT_NO12, 
                        string AMOUNT1, 
                        string AMOUNT2, 
                        string AMOUNT3, 
                        string AMOUNT4, 
                        string AMOUNT5, 
                        string AMOUNT6, 
                        string AMOUNT7, 
                        string AMOUNT8, 
                        string AMOUNT9, 
                        string AMOUNT10, 
                        string AMOUNT11, 
                        string AMOUNT12, 
                        string LOADED_BY1, 
                        string LOADED_BY2, 
                        string LOADED_BY3, 
                        string LOADED_BY4, 
                        string LOADED_BY5, 
                        string LOADED_BY6, 
                        string LOADED_BY7, 
                        string LOADED_BY8, 
                        string LOADED_BY9, 
                        string LOADED_BY10, 
                        string LOADED_BY11, 
                        string LOADED_BY12, 
                        string MIXING_INSTRUCTIONS, 
                        string TYPE_OF_DRUM, 
                        string WEIGHT_PER_DRUM, 
                        string NUMBER_OF_DRUMS, 
                        string WEIGHT_PRODUCED, 
                        string REVISION_DATE, 
                        string FORM_VERSION, 
                        string MIXER_BATCH_SHEET, 
                        string INST2, 
                        string SAMPLE_AND_LABEL, 
                        string INGRED, 
                        string POT_FORMULA, 
                        string BLADE_SPEED, 
                        string SPEED, 
                        string PRESS_DATA, 
                        string EXPIRATION_DATE, 
                        string STORAGE, 
                        string THEOR_WT, 
                        string OPER, 
                        string OPER_Copy, 
                        string Adage_Item_Code, 
                        System.DateTime LastUpdate, 
                        string WhichUser, 
                        string NameofMachine, 
                        string COMMENTS) {
                BATCH_SHEETS_NewRow rowBATCH_SHEETS_NewRow = ((BATCH_SHEETS_NewRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        DATE,
                        MIXER,
                        GRADE,
                        BATCH_NUMBER,
                        INGREDIENT1,
                        INGREDIENT2,
                        INGREDIENT3,
                        INGREDIENT4,
                        INGREDIENT5,
                        INGREDIENT6,
                        INGREDIENT7,
                        INGREDIENT8,
                        INGREDIENT9,
                        INGREDIENT10,
                        INGREDIENT11,
                        INGREDIENT12,
                        LOT_NO1,
                        LOT_NO2,
                        LOT_NO3,
                        LOT_NO4,
                        LOT_NO5,
                        LOT_NO6,
                        LOT_NO7,
                        LOT_NO8,
                        LOT_NO9,
                        LOT_NO10,
                        LOT_NO11,
                        LOT_NO12,
                        AMOUNT1,
                        AMOUNT2,
                        AMOUNT3,
                        AMOUNT4,
                        AMOUNT5,
                        AMOUNT6,
                        AMOUNT7,
                        AMOUNT8,
                        AMOUNT9,
                        AMOUNT10,
                        AMOUNT11,
                        AMOUNT12,
                        LOADED_BY1,
                        LOADED_BY2,
                        LOADED_BY3,
                        LOADED_BY4,
                        LOADED_BY5,
                        LOADED_BY6,
                        LOADED_BY7,
                        LOADED_BY8,
                        LOADED_BY9,
                        LOADED_BY10,
                        LOADED_BY11,
                        LOADED_BY12,
                        MIXING_INSTRUCTIONS,
                        TYPE_OF_DRUM,
                        WEIGHT_PER_DRUM,
                        NUMBER_OF_DRUMS,
                        WEIGHT_PRODUCED,
                        REVISION_DATE,
                        FORM_VERSION,
                        MIXER_BATCH_SHEET,
                        INST2,
                        SAMPLE_AND_LABEL,
                        INGRED,
                        POT_FORMULA,
                        BLADE_SPEED,
                        SPEED,
                        PRESS_DATA,
                        EXPIRATION_DATE,
                        STORAGE,
                        THEOR_WT,
                        OPER,
                        OPER_Copy,
                        Adage_Item_Code,
                        LastUpdate,
                        WhichUser,
                        NameofMachine,
                        COMMENTS};
                rowBATCH_SHEETS_NewRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowBATCH_SHEETS_NewRow);
                return rowBATCH_SHEETS_NewRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public BATCH_SHEETS_NewRow FindByRow(int Row) {
                return ((BATCH_SHEETS_NewRow)(this.Rows.Find(new object[] {
                            Row})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                BATCH_SHEETS_NewDataTable cln = ((BATCH_SHEETS_NewDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new BATCH_SHEETS_NewDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal void InitVars() {
                this.columnRow = base.Columns["Row"];
                this.columnDATE = base.Columns["DATE"];
                this.columnMIXER = base.Columns["MIXER"];
                this.columnGRADE = base.Columns["GRADE"];
                this.columnBATCH_NUMBER = base.Columns["BATCH_NUMBER"];
                this.columnINGREDIENT1 = base.Columns["INGREDIENT1"];
                this.columnINGREDIENT2 = base.Columns["INGREDIENT2"];
                this.columnINGREDIENT3 = base.Columns["INGREDIENT3"];
                this.columnINGREDIENT4 = base.Columns["INGREDIENT4"];
                this.columnINGREDIENT5 = base.Columns["INGREDIENT5"];
                this.columnINGREDIENT6 = base.Columns["INGREDIENT6"];
                this.columnINGREDIENT7 = base.Columns["INGREDIENT7"];
                this.columnINGREDIENT8 = base.Columns["INGREDIENT8"];
                this.columnINGREDIENT9 = base.Columns["INGREDIENT9"];
                this.columnINGREDIENT10 = base.Columns["INGREDIENT10"];
                this.columnINGREDIENT11 = base.Columns["INGREDIENT11"];
                this.columnINGREDIENT12 = base.Columns["INGREDIENT12"];
                this.columnLOT_NO1 = base.Columns["LOT_NO1"];
                this.columnLOT_NO2 = base.Columns["LOT_NO2"];
                this.columnLOT_NO3 = base.Columns["LOT_NO3"];
                this.columnLOT_NO4 = base.Columns["LOT_NO4"];
                this.columnLOT_NO5 = base.Columns["LOT_NO5"];
                this.columnLOT_NO6 = base.Columns["LOT_NO6"];
                this.columnLOT_NO7 = base.Columns["LOT_NO7"];
                this.columnLOT_NO8 = base.Columns["LOT_NO8"];
                this.columnLOT_NO9 = base.Columns["LOT_NO9"];
                this.columnLOT_NO10 = base.Columns["LOT_NO10"];
                this.columnLOT_NO11 = base.Columns["LOT_NO11"];
                this.columnLOT_NO12 = base.Columns["LOT_NO12"];
                this.columnAMOUNT1 = base.Columns["AMOUNT1"];
                this.columnAMOUNT2 = base.Columns["AMOUNT2"];
                this.columnAMOUNT3 = base.Columns["AMOUNT3"];
                this.columnAMOUNT4 = base.Columns["AMOUNT4"];
                this.columnAMOUNT5 = base.Columns["AMOUNT5"];
                this.columnAMOUNT6 = base.Columns["AMOUNT6"];
                this.columnAMOUNT7 = base.Columns["AMOUNT7"];
                this.columnAMOUNT8 = base.Columns["AMOUNT8"];
                this.columnAMOUNT9 = base.Columns["AMOUNT9"];
                this.columnAMOUNT10 = base.Columns["AMOUNT10"];
                this.columnAMOUNT11 = base.Columns["AMOUNT11"];
                this.columnAMOUNT12 = base.Columns["AMOUNT12"];
                this.columnLOADED_BY1 = base.Columns["LOADED_BY1"];
                this.columnLOADED_BY2 = base.Columns["LOADED_BY2"];
                this.columnLOADED_BY3 = base.Columns["LOADED_BY3"];
                this.columnLOADED_BY4 = base.Columns["LOADED_BY4"];
                this.columnLOADED_BY5 = base.Columns["LOADED_BY5"];
                this.columnLOADED_BY6 = base.Columns["LOADED_BY6"];
                this.columnLOADED_BY7 = base.Columns["LOADED_BY7"];
                this.columnLOADED_BY8 = base.Columns["LOADED_BY8"];
                this.columnLOADED_BY9 = base.Columns["LOADED_BY9"];
                this.columnLOADED_BY10 = base.Columns["LOADED_BY10"];
                this.columnLOADED_BY11 = base.Columns["LOADED_BY11"];
                this.columnLOADED_BY12 = base.Columns["LOADED_BY12"];
                this.columnMIXING_INSTRUCTIONS = base.Columns["MIXING_INSTRUCTIONS"];
                this.columnTYPE_OF_DRUM = base.Columns["TYPE_OF_DRUM"];
                this.columnWEIGHT_PER_DRUM = base.Columns["WEIGHT_PER_DRUM"];
                this.columnNUMBER_OF_DRUMS = base.Columns["NUMBER_OF_DRUMS"];
                this.columnWEIGHT_PRODUCED = base.Columns["WEIGHT_PRODUCED"];
                this.columnREVISION_DATE = base.Columns["REVISION_DATE"];
                this.columnFORM_VERSION = base.Columns["FORM_VERSION"];
                this.columnMIXER_BATCH_SHEET = base.Columns["MIXER_BATCH_SHEET"];
                this.columnINST2 = base.Columns["INST2"];
                this.columnSAMPLE_AND_LABEL = base.Columns["SAMPLE_AND_LABEL"];
                this.columnINGRED = base.Columns["INGRED"];
                this.columnPOT_FORMULA = base.Columns["POT_FORMULA"];
                this.columnBLADE_SPEED = base.Columns["BLADE_SPEED"];
                this.columnSPEED = base.Columns["SPEED"];
                this.columnPRESS_DATA = base.Columns["PRESS_DATA"];
                this.columnEXPIRATION_DATE = base.Columns["EXPIRATION_DATE"];
                this.columnSTORAGE = base.Columns["STORAGE"];
                this.columnTHEOR_WT = base.Columns["THEOR_WT"];
                this.columnOPER = base.Columns["OPER"];
                this.columnOPER_Copy = base.Columns["OPER_Copy"];
                this.columnAdage_Item_Code = base.Columns["Adage_Item_Code"];
                this.columnLastUpdate = base.Columns["LastUpdate"];
                this.columnWhichUser = base.Columns["WhichUser"];
                this.columnNameofMachine = base.Columns["NameofMachine"];
                this.columnCOMMENTS = base.Columns["COMMENTS"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            private void InitClass() {
                this.columnRow = new global::System.Data.DataColumn("Row", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRow);
                this.columnDATE = new global::System.Data.DataColumn("DATE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDATE);
                this.columnMIXER = new global::System.Data.DataColumn("MIXER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMIXER);
                this.columnGRADE = new global::System.Data.DataColumn("GRADE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGRADE);
                this.columnBATCH_NUMBER = new global::System.Data.DataColumn("BATCH_NUMBER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBATCH_NUMBER);
                this.columnINGREDIENT1 = new global::System.Data.DataColumn("INGREDIENT1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINGREDIENT1);
                this.columnINGREDIENT2 = new global::System.Data.DataColumn("INGREDIENT2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINGREDIENT2);
                this.columnINGREDIENT3 = new global::System.Data.DataColumn("INGREDIENT3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINGREDIENT3);
                this.columnINGREDIENT4 = new global::System.Data.DataColumn("INGREDIENT4", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINGREDIENT4);
                this.columnINGREDIENT5 = new global::System.Data.DataColumn("INGREDIENT5", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINGREDIENT5);
                this.columnINGREDIENT6 = new global::System.Data.DataColumn("INGREDIENT6", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINGREDIENT6);
                this.columnINGREDIENT7 = new global::System.Data.DataColumn("INGREDIENT7", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINGREDIENT7);
                this.columnINGREDIENT8 = new global::System.Data.DataColumn("INGREDIENT8", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINGREDIENT8);
                this.columnINGREDIENT9 = new global::System.Data.DataColumn("INGREDIENT9", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINGREDIENT9);
                this.columnINGREDIENT10 = new global::System.Data.DataColumn("INGREDIENT10", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINGREDIENT10);
                this.columnINGREDIENT11 = new global::System.Data.DataColumn("INGREDIENT11", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINGREDIENT11);
                this.columnINGREDIENT12 = new global::System.Data.DataColumn("INGREDIENT12", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINGREDIENT12);
                this.columnLOT_NO1 = new global::System.Data.DataColumn("LOT_NO1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLOT_NO1);
                this.columnLOT_NO2 = new global::System.Data.DataColumn("LOT_NO2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLOT_NO2);
                this.columnLOT_NO3 = new global::System.Data.DataColumn("LOT_NO3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLOT_NO3);
                this.columnLOT_NO4 = new global::System.Data.DataColumn("LOT_NO4", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLOT_NO4);
                this.columnLOT_NO5 = new global::System.Data.DataColumn("LOT_NO5", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLOT_NO5);
                this.columnLOT_NO6 = new global::System.Data.DataColumn("LOT_NO6", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLOT_NO6);
                this.columnLOT_NO7 = new global::System.Data.DataColumn("LOT_NO7", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLOT_NO7);
                this.columnLOT_NO8 = new global::System.Data.DataColumn("LOT_NO8", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLOT_NO8);
                this.columnLOT_NO9 = new global::System.Data.DataColumn("LOT_NO9", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLOT_NO9);
                this.columnLOT_NO10 = new global::System.Data.DataColumn("LOT_NO10", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLOT_NO10);
                this.columnLOT_NO11 = new global::System.Data.DataColumn("LOT_NO11", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLOT_NO11);
                this.columnLOT_NO12 = new global::System.Data.DataColumn("LOT_NO12", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLOT_NO12);
                this.columnAMOUNT1 = new global::System.Data.DataColumn("AMOUNT1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAMOUNT1);
                this.columnAMOUNT2 = new global::System.Data.DataColumn("AMOUNT2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAMOUNT2);
                this.columnAMOUNT3 = new global::System.Data.DataColumn("AMOUNT3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAMOUNT3);
                this.columnAMOUNT4 = new global::System.Data.DataColumn("AMOUNT4", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAMOUNT4);
                this.columnAMOUNT5 = new global::System.Data.DataColumn("AMOUNT5", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAMOUNT5);
                this.columnAMOUNT6 = new global::System.Data.DataColumn("AMOUNT6", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAMOUNT6);
                this.columnAMOUNT7 = new global::System.Data.DataColumn("AMOUNT7", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAMOUNT7);
                this.columnAMOUNT8 = new global::System.Data.DataColumn("AMOUNT8", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAMOUNT8);
                this.columnAMOUNT9 = new global::System.Data.DataColumn("AMOUNT9", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAMOUNT9);
                this.columnAMOUNT10 = new global::System.Data.DataColumn("AMOUNT10", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAMOUNT10);
                this.columnAMOUNT11 = new global::System.Data.DataColumn("AMOUNT11", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAMOUNT11);
                this.columnAMOUNT12 = new global::System.Data.DataColumn("AMOUNT12", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAMOUNT12);
                this.columnLOADED_BY1 = new global::System.Data.DataColumn("LOADED_BY1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLOADED_BY1);
                this.columnLOADED_BY2 = new global::System.Data.DataColumn("LOADED_BY2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLOADED_BY2);
                this.columnLOADED_BY3 = new global::System.Data.DataColumn("LOADED_BY3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLOADED_BY3);
                this.columnLOADED_BY4 = new global::System.Data.DataColumn("LOADED_BY4", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLOADED_BY4);
                this.columnLOADED_BY5 = new global::System.Data.DataColumn("LOADED_BY5", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLOADED_BY5);
                this.columnLOADED_BY6 = new global::System.Data.DataColumn("LOADED_BY6", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLOADED_BY6);
                this.columnLOADED_BY7 = new global::System.Data.DataColumn("LOADED_BY7", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLOADED_BY7);
                this.columnLOADED_BY8 = new global::System.Data.DataColumn("LOADED_BY8", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLOADED_BY8);
                this.columnLOADED_BY9 = new global::System.Data.DataColumn("LOADED_BY9", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLOADED_BY9);
                this.columnLOADED_BY10 = new global::System.Data.DataColumn("LOADED_BY10", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLOADED_BY10);
                this.columnLOADED_BY11 = new global::System.Data.DataColumn("LOADED_BY11", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLOADED_BY11);
                this.columnLOADED_BY12 = new global::System.Data.DataColumn("LOADED_BY12", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLOADED_BY12);
                this.columnMIXING_INSTRUCTIONS = new global::System.Data.DataColumn("MIXING_INSTRUCTIONS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMIXING_INSTRUCTIONS);
                this.columnTYPE_OF_DRUM = new global::System.Data.DataColumn("TYPE_OF_DRUM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTYPE_OF_DRUM);
                this.columnWEIGHT_PER_DRUM = new global::System.Data.DataColumn("WEIGHT_PER_DRUM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWEIGHT_PER_DRUM);
                this.columnNUMBER_OF_DRUMS = new global::System.Data.DataColumn("NUMBER_OF_DRUMS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNUMBER_OF_DRUMS);
                this.columnWEIGHT_PRODUCED = new global::System.Data.DataColumn("WEIGHT_PRODUCED", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWEIGHT_PRODUCED);
                this.columnREVISION_DATE = new global::System.Data.DataColumn("REVISION_DATE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnREVISION_DATE);
                this.columnFORM_VERSION = new global::System.Data.DataColumn("FORM_VERSION", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFORM_VERSION);
                this.columnMIXER_BATCH_SHEET = new global::System.Data.DataColumn("MIXER_BATCH_SHEET", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMIXER_BATCH_SHEET);
                this.columnINST2 = new global::System.Data.DataColumn("INST2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINST2);
                this.columnSAMPLE_AND_LABEL = new global::System.Data.DataColumn("SAMPLE_AND_LABEL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSAMPLE_AND_LABEL);
                this.columnINGRED = new global::System.Data.DataColumn("INGRED", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINGRED);
                this.columnPOT_FORMULA = new global::System.Data.DataColumn("POT_FORMULA", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPOT_FORMULA);
                this.columnBLADE_SPEED = new global::System.Data.DataColumn("BLADE_SPEED", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBLADE_SPEED);
                this.columnSPEED = new global::System.Data.DataColumn("SPEED", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSPEED);
                this.columnPRESS_DATA = new global::System.Data.DataColumn("PRESS_DATA", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPRESS_DATA);
                this.columnEXPIRATION_DATE = new global::System.Data.DataColumn("EXPIRATION_DATE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEXPIRATION_DATE);
                this.columnSTORAGE = new global::System.Data.DataColumn("STORAGE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTORAGE);
                this.columnTHEOR_WT = new global::System.Data.DataColumn("THEOR_WT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTHEOR_WT);
                this.columnOPER = new global::System.Data.DataColumn("OPER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOPER);
                this.columnOPER_Copy = new global::System.Data.DataColumn("OPER_Copy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOPER_Copy);
                this.columnAdage_Item_Code = new global::System.Data.DataColumn("Adage_Item_Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAdage_Item_Code);
                this.columnLastUpdate = new global::System.Data.DataColumn("LastUpdate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLastUpdate);
                this.columnWhichUser = new global::System.Data.DataColumn("WhichUser", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWhichUser);
                this.columnNameofMachine = new global::System.Data.DataColumn("NameofMachine", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNameofMachine);
                this.columnCOMMENTS = new global::System.Data.DataColumn("COMMENTS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOMMENTS);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnRow}, true));
                this.columnRow.AutoIncrement = true;
                this.columnRow.AutoIncrementSeed = -1;
                this.columnRow.AutoIncrementStep = -1;
                this.columnRow.AllowDBNull = false;
                this.columnRow.ReadOnly = true;
                this.columnRow.Unique = true;
                this.columnDATE.MaxLength = 500;
                this.columnMIXER.MaxLength = 500;
                this.columnGRADE.MaxLength = 500;
                this.columnBATCH_NUMBER.MaxLength = 500;
                this.columnINGREDIENT1.MaxLength = 1000;
                this.columnINGREDIENT2.MaxLength = 1000;
                this.columnINGREDIENT3.MaxLength = 1000;
                this.columnINGREDIENT4.MaxLength = 1000;
                this.columnINGREDIENT5.MaxLength = 1000;
                this.columnINGREDIENT6.MaxLength = 1000;
                this.columnINGREDIENT7.MaxLength = 1000;
                this.columnINGREDIENT8.MaxLength = 1000;
                this.columnINGREDIENT9.MaxLength = 1000;
                this.columnINGREDIENT10.MaxLength = 1000;
                this.columnINGREDIENT11.MaxLength = 1000;
                this.columnINGREDIENT12.MaxLength = 1000;
                this.columnLOT_NO1.MaxLength = 1000;
                this.columnLOT_NO2.MaxLength = 1000;
                this.columnLOT_NO3.MaxLength = 1000;
                this.columnLOT_NO4.MaxLength = 1000;
                this.columnLOT_NO5.MaxLength = 1000;
                this.columnLOT_NO6.MaxLength = 1000;
                this.columnLOT_NO7.MaxLength = 1000;
                this.columnLOT_NO8.MaxLength = 1000;
                this.columnLOT_NO9.MaxLength = 1000;
                this.columnLOT_NO10.MaxLength = 1000;
                this.columnLOT_NO11.MaxLength = 1000;
                this.columnLOT_NO12.MaxLength = 1000;
                this.columnAMOUNT1.MaxLength = 1000;
                this.columnAMOUNT2.MaxLength = 1000;
                this.columnAMOUNT3.MaxLength = 1000;
                this.columnAMOUNT4.MaxLength = 1000;
                this.columnAMOUNT5.MaxLength = 1000;
                this.columnAMOUNT6.MaxLength = 1000;
                this.columnAMOUNT7.MaxLength = 1000;
                this.columnAMOUNT8.MaxLength = 1000;
                this.columnAMOUNT9.MaxLength = 1000;
                this.columnAMOUNT10.MaxLength = 1000;
                this.columnAMOUNT11.MaxLength = 1000;
                this.columnAMOUNT12.MaxLength = 1000;
                this.columnLOADED_BY1.MaxLength = 500;
                this.columnLOADED_BY2.MaxLength = 500;
                this.columnLOADED_BY3.MaxLength = 500;
                this.columnLOADED_BY4.MaxLength = 500;
                this.columnLOADED_BY5.MaxLength = 500;
                this.columnLOADED_BY6.MaxLength = 500;
                this.columnLOADED_BY7.MaxLength = 500;
                this.columnLOADED_BY8.MaxLength = 500;
                this.columnLOADED_BY9.MaxLength = 500;
                this.columnLOADED_BY10.MaxLength = 500;
                this.columnLOADED_BY11.MaxLength = 500;
                this.columnLOADED_BY12.MaxLength = 500;
                this.columnMIXING_INSTRUCTIONS.MaxLength = 2147483647;
                this.columnTYPE_OF_DRUM.MaxLength = 500;
                this.columnWEIGHT_PER_DRUM.MaxLength = 500;
                this.columnNUMBER_OF_DRUMS.MaxLength = 500;
                this.columnWEIGHT_PRODUCED.MaxLength = 500;
                this.columnREVISION_DATE.MaxLength = 500;
                this.columnFORM_VERSION.MaxLength = 500;
                this.columnMIXER_BATCH_SHEET.MaxLength = 500;
                this.columnINST2.MaxLength = 500;
                this.columnSAMPLE_AND_LABEL.MaxLength = 500;
                this.columnINGRED.MaxLength = 1000;
                this.columnPOT_FORMULA.MaxLength = 500;
                this.columnBLADE_SPEED.MaxLength = 500;
                this.columnSPEED.MaxLength = 1000;
                this.columnPRESS_DATA.MaxLength = 1000;
                this.columnEXPIRATION_DATE.MaxLength = 500;
                this.columnSTORAGE.MaxLength = 500;
                this.columnTHEOR_WT.MaxLength = 500;
                this.columnOPER.MaxLength = 500;
                this.columnOPER_Copy.MaxLength = 500;
                this.columnAdage_Item_Code.MaxLength = 200;
                this.columnWhichUser.MaxLength = 50;
                this.columnNameofMachine.MaxLength = 50;
                this.columnCOMMENTS.MaxLength = 8000;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public BATCH_SHEETS_NewRow NewBATCH_SHEETS_NewRow() {
                return ((BATCH_SHEETS_NewRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new BATCH_SHEETS_NewRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(BATCH_SHEETS_NewRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.BATCH_SHEETS_NewRowChanged != null)) {
                    this.BATCH_SHEETS_NewRowChanged(this, new BATCH_SHEETS_NewRowChangeEvent(((BATCH_SHEETS_NewRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.BATCH_SHEETS_NewRowChanging != null)) {
                    this.BATCH_SHEETS_NewRowChanging(this, new BATCH_SHEETS_NewRowChangeEvent(((BATCH_SHEETS_NewRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.BATCH_SHEETS_NewRowDeleted != null)) {
                    this.BATCH_SHEETS_NewRowDeleted(this, new BATCH_SHEETS_NewRowChangeEvent(((BATCH_SHEETS_NewRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.BATCH_SHEETS_NewRowDeleting != null)) {
                    this.BATCH_SHEETS_NewRowDeleting(this, new BATCH_SHEETS_NewRowChangeEvent(((BATCH_SHEETS_NewRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void RemoveBATCH_SHEETS_NewRow(BATCH_SHEETS_NewRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet2 ds = new DataSet2();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "BATCH_SHEETS_NewDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class BATCH_SHEETS_NewRow : global::System.Data.DataRow {
            
            private BATCH_SHEETS_NewDataTable tableBATCH_SHEETS_New;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal BATCH_SHEETS_NewRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableBATCH_SHEETS_New = ((BATCH_SHEETS_NewDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int Row {
                get {
                    return ((int)(this[this.tableBATCH_SHEETS_New.RowColumn]));
                }
                set {
                    this[this.tableBATCH_SHEETS_New.RowColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string DATE {
                get {
                    try {
                        return ((string)(this[this.tableBATCH_SHEETS_New.DATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DATE\' in table \'BATCH_SHEETS_New\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBATCH_SHEETS_New.DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string MIXER {
                get {
                    try {
                        return ((string)(this[this.tableBATCH_SHEETS_New.MIXERColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MIXER\' in table \'BATCH_SHEETS_New\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBATCH_SHEETS_New.MIXERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string GRADE {
                get {
                    try {
                        return ((string)(this[this.tableBATCH_SHEETS_New.GRADEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GRADE\' in table \'BATCH_SHEETS_New\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBATCH_SHEETS_New.GRADEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string BATCH_NUMBER {
                get {
                    try {
                        return ((string)(this[this.tableBATCH_SHEETS_New.BATCH_NUMBERColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BATCH_NUMBER\' in table \'BATCH_SHEETS_New\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBATCH_SHEETS_New.BATCH_NUMBERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string INGREDIENT1 {
                get {
                    try {
                        return ((string)(this[this.tableBATCH_SHEETS_New.INGREDIENT1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'INGREDIENT1\' in table \'BATCH_SHEETS_New\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBATCH_SHEETS_New.INGREDIENT1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string INGREDIENT2 {
                get {
                    try {
                        return ((string)(this[this.tableBATCH_SHEETS_New.INGREDIENT2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'INGREDIENT2\' in table \'BATCH_SHEETS_New\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBATCH_SHEETS_New.INGREDIENT2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string INGREDIENT3 {
                get {
                    try {
                        return ((string)(this[this.tableBATCH_SHEETS_New.INGREDIENT3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'INGREDIENT3\' in table \'BATCH_SHEETS_New\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBATCH_SHEETS_New.INGREDIENT3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string INGREDIENT4 {
                get {
                    try {
                        return ((string)(this[this.tableBATCH_SHEETS_New.INGREDIENT4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'INGREDIENT4\' in table \'BATCH_SHEETS_New\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBATCH_SHEETS_New.INGREDIENT4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string INGREDIENT5 {
                get {
                    try {
                        return ((string)(this[this.tableBATCH_SHEETS_New.INGREDIENT5Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'INGREDIENT5\' in table \'BATCH_SHEETS_New\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBATCH_SHEETS_New.INGREDIENT5Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string INGREDIENT6 {
                get {
                    try {
                        return ((string)(this[this.tableBATCH_SHEETS_New.INGREDIENT6Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'INGREDIENT6\' in table \'BATCH_SHEETS_New\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBATCH_SHEETS_New.INGREDIENT6Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string INGREDIENT7 {
                get {
                    try {
                        return ((string)(this[this.tableBATCH_SHEETS_New.INGREDIENT7Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'INGREDIENT7\' in table \'BATCH_SHEETS_New\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBATCH_SHEETS_New.INGREDIENT7Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string INGREDIENT8 {
                get {
                    try {
                        return ((string)(this[this.tableBATCH_SHEETS_New.INGREDIENT8Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'INGREDIENT8\' in table \'BATCH_SHEETS_New\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBATCH_SHEETS_New.INGREDIENT8Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string INGREDIENT9 {
                get {
                    try {
                        return ((string)(this[this.tableBATCH_SHEETS_New.INGREDIENT9Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'INGREDIENT9\' in table \'BATCH_SHEETS_New\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBATCH_SHEETS_New.INGREDIENT9Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string INGREDIENT10 {
                get {
                    try {
                        return ((string)(this[this.tableBATCH_SHEETS_New.INGREDIENT10Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'INGREDIENT10\' in table \'BATCH_SHEETS_New\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBATCH_SHEETS_New.INGREDIENT10Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string INGREDIENT11 {
                get {
                    try {
                        return ((string)(this[this.tableBATCH_SHEETS_New.INGREDIENT11Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'INGREDIENT11\' in table \'BATCH_SHEETS_New\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBATCH_SHEETS_New.INGREDIENT11Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string INGREDIENT12 {
                get {
                    try {
                        return ((string)(this[this.tableBATCH_SHEETS_New.INGREDIENT12Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'INGREDIENT12\' in table \'BATCH_SHEETS_New\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBATCH_SHEETS_New.INGREDIENT12Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string LOT_NO1 {
                get {
                    try {
                        return ((string)(this[this.tableBATCH_SHEETS_New.LOT_NO1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LOT_NO1\' in table \'BATCH_SHEETS_New\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBATCH_SHEETS_New.LOT_NO1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string LOT_NO2 {
                get {
                    try {
                        return ((string)(this[this.tableBATCH_SHEETS_New.LOT_NO2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LOT_NO2\' in table \'BATCH_SHEETS_New\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBATCH_SHEETS_New.LOT_NO2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string LOT_NO3 {
                get {
                    try {
                        return ((string)(this[this.tableBATCH_SHEETS_New.LOT_NO3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LOT_NO3\' in table \'BATCH_SHEETS_New\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBATCH_SHEETS_New.LOT_NO3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string LOT_NO4 {
                get {
                    try {
                        return ((string)(this[this.tableBATCH_SHEETS_New.LOT_NO4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LOT_NO4\' in table \'BATCH_SHEETS_New\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBATCH_SHEETS_New.LOT_NO4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string LOT_NO5 {
                get {
                    try {
                        return ((string)(this[this.tableBATCH_SHEETS_New.LOT_NO5Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LOT_NO5\' in table \'BATCH_SHEETS_New\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBATCH_SHEETS_New.LOT_NO5Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string LOT_NO6 {
                get {
                    try {
                        return ((string)(this[this.tableBATCH_SHEETS_New.LOT_NO6Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LOT_NO6\' in table \'BATCH_SHEETS_New\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBATCH_SHEETS_New.LOT_NO6Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string LOT_NO7 {
                get {
                    try {
                        return ((string)(this[this.tableBATCH_SHEETS_New.LOT_NO7Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LOT_NO7\' in table \'BATCH_SHEETS_New\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBATCH_SHEETS_New.LOT_NO7Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string LOT_NO8 {
                get {
                    try {
                        return ((string)(this[this.tableBATCH_SHEETS_New.LOT_NO8Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LOT_NO8\' in table \'BATCH_SHEETS_New\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBATCH_SHEETS_New.LOT_NO8Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string LOT_NO9 {
                get {
                    try {
                        return ((string)(this[this.tableBATCH_SHEETS_New.LOT_NO9Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LOT_NO9\' in table \'BATCH_SHEETS_New\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBATCH_SHEETS_New.LOT_NO9Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string LOT_NO10 {
                get {
                    try {
                        return ((string)(this[this.tableBATCH_SHEETS_New.LOT_NO10Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LOT_NO10\' in table \'BATCH_SHEETS_New\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBATCH_SHEETS_New.LOT_NO10Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string LOT_NO11 {
                get {
                    try {
                        return ((string)(this[this.tableBATCH_SHEETS_New.LOT_NO11Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LOT_NO11\' in table \'BATCH_SHEETS_New\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBATCH_SHEETS_New.LOT_NO11Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string LOT_NO12 {
                get {
                    try {
                        return ((string)(this[this.tableBATCH_SHEETS_New.LOT_NO12Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LOT_NO12\' in table \'BATCH_SHEETS_New\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBATCH_SHEETS_New.LOT_NO12Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string AMOUNT1 {
                get {
                    try {
                        return ((string)(this[this.tableBATCH_SHEETS_New.AMOUNT1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AMOUNT1\' in table \'BATCH_SHEETS_New\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBATCH_SHEETS_New.AMOUNT1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string AMOUNT2 {
                get {
                    try {
                        return ((string)(this[this.tableBATCH_SHEETS_New.AMOUNT2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AMOUNT2\' in table \'BATCH_SHEETS_New\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBATCH_SHEETS_New.AMOUNT2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string AMOUNT3 {
                get {
                    try {
                        return ((string)(this[this.tableBATCH_SHEETS_New.AMOUNT3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AMOUNT3\' in table \'BATCH_SHEETS_New\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBATCH_SHEETS_New.AMOUNT3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string AMOUNT4 {
                get {
                    try {
                        return ((string)(this[this.tableBATCH_SHEETS_New.AMOUNT4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AMOUNT4\' in table \'BATCH_SHEETS_New\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBATCH_SHEETS_New.AMOUNT4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string AMOUNT5 {
                get {
                    try {
                        return ((string)(this[this.tableBATCH_SHEETS_New.AMOUNT5Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AMOUNT5\' in table \'BATCH_SHEETS_New\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBATCH_SHEETS_New.AMOUNT5Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string AMOUNT6 {
                get {
                    try {
                        return ((string)(this[this.tableBATCH_SHEETS_New.AMOUNT6Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AMOUNT6\' in table \'BATCH_SHEETS_New\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBATCH_SHEETS_New.AMOUNT6Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string AMOUNT7 {
                get {
                    try {
                        return ((string)(this[this.tableBATCH_SHEETS_New.AMOUNT7Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AMOUNT7\' in table \'BATCH_SHEETS_New\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBATCH_SHEETS_New.AMOUNT7Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string AMOUNT8 {
                get {
                    try {
                        return ((string)(this[this.tableBATCH_SHEETS_New.AMOUNT8Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AMOUNT8\' in table \'BATCH_SHEETS_New\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBATCH_SHEETS_New.AMOUNT8Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string AMOUNT9 {
                get {
                    try {
                        return ((string)(this[this.tableBATCH_SHEETS_New.AMOUNT9Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AMOUNT9\' in table \'BATCH_SHEETS_New\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBATCH_SHEETS_New.AMOUNT9Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string AMOUNT10 {
                get {
                    try {
                        return ((string)(this[this.tableBATCH_SHEETS_New.AMOUNT10Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AMOUNT10\' in table \'BATCH_SHEETS_New\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBATCH_SHEETS_New.AMOUNT10Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string AMOUNT11 {
                get {
                    try {
                        return ((string)(this[this.tableBATCH_SHEETS_New.AMOUNT11Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AMOUNT11\' in table \'BATCH_SHEETS_New\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBATCH_SHEETS_New.AMOUNT11Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string AMOUNT12 {
                get {
                    try {
                        return ((string)(this[this.tableBATCH_SHEETS_New.AMOUNT12Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AMOUNT12\' in table \'BATCH_SHEETS_New\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBATCH_SHEETS_New.AMOUNT12Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string LOADED_BY1 {
                get {
                    try {
                        return ((string)(this[this.tableBATCH_SHEETS_New.LOADED_BY1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LOADED_BY1\' in table \'BATCH_SHEETS_New\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBATCH_SHEETS_New.LOADED_BY1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string LOADED_BY2 {
                get {
                    try {
                        return ((string)(this[this.tableBATCH_SHEETS_New.LOADED_BY2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LOADED_BY2\' in table \'BATCH_SHEETS_New\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBATCH_SHEETS_New.LOADED_BY2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string LOADED_BY3 {
                get {
                    try {
                        return ((string)(this[this.tableBATCH_SHEETS_New.LOADED_BY3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LOADED_BY3\' in table \'BATCH_SHEETS_New\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBATCH_SHEETS_New.LOADED_BY3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string LOADED_BY4 {
                get {
                    try {
                        return ((string)(this[this.tableBATCH_SHEETS_New.LOADED_BY4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LOADED_BY4\' in table \'BATCH_SHEETS_New\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBATCH_SHEETS_New.LOADED_BY4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string LOADED_BY5 {
                get {
                    try {
                        return ((string)(this[this.tableBATCH_SHEETS_New.LOADED_BY5Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LOADED_BY5\' in table \'BATCH_SHEETS_New\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBATCH_SHEETS_New.LOADED_BY5Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string LOADED_BY6 {
                get {
                    try {
                        return ((string)(this[this.tableBATCH_SHEETS_New.LOADED_BY6Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LOADED_BY6\' in table \'BATCH_SHEETS_New\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBATCH_SHEETS_New.LOADED_BY6Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string LOADED_BY7 {
                get {
                    try {
                        return ((string)(this[this.tableBATCH_SHEETS_New.LOADED_BY7Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LOADED_BY7\' in table \'BATCH_SHEETS_New\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBATCH_SHEETS_New.LOADED_BY7Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string LOADED_BY8 {
                get {
                    try {
                        return ((string)(this[this.tableBATCH_SHEETS_New.LOADED_BY8Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LOADED_BY8\' in table \'BATCH_SHEETS_New\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBATCH_SHEETS_New.LOADED_BY8Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string LOADED_BY9 {
                get {
                    try {
                        return ((string)(this[this.tableBATCH_SHEETS_New.LOADED_BY9Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LOADED_BY9\' in table \'BATCH_SHEETS_New\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBATCH_SHEETS_New.LOADED_BY9Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string LOADED_BY10 {
                get {
                    try {
                        return ((string)(this[this.tableBATCH_SHEETS_New.LOADED_BY10Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LOADED_BY10\' in table \'BATCH_SHEETS_New\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBATCH_SHEETS_New.LOADED_BY10Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string LOADED_BY11 {
                get {
                    try {
                        return ((string)(this[this.tableBATCH_SHEETS_New.LOADED_BY11Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LOADED_BY11\' in table \'BATCH_SHEETS_New\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBATCH_SHEETS_New.LOADED_BY11Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string LOADED_BY12 {
                get {
                    try {
                        return ((string)(this[this.tableBATCH_SHEETS_New.LOADED_BY12Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LOADED_BY12\' in table \'BATCH_SHEETS_New\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBATCH_SHEETS_New.LOADED_BY12Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string MIXING_INSTRUCTIONS {
                get {
                    try {
                        return ((string)(this[this.tableBATCH_SHEETS_New.MIXING_INSTRUCTIONSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MIXING_INSTRUCTIONS\' in table \'BATCH_SHEETS_New\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableBATCH_SHEETS_New.MIXING_INSTRUCTIONSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string TYPE_OF_DRUM {
                get {
                    try {
                        return ((string)(this[this.tableBATCH_SHEETS_New.TYPE_OF_DRUMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TYPE_OF_DRUM\' in table \'BATCH_SHEETS_New\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBATCH_SHEETS_New.TYPE_OF_DRUMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string WEIGHT_PER_DRUM {
                get {
                    try {
                        return ((string)(this[this.tableBATCH_SHEETS_New.WEIGHT_PER_DRUMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WEIGHT_PER_DRUM\' in table \'BATCH_SHEETS_New\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBATCH_SHEETS_New.WEIGHT_PER_DRUMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string NUMBER_OF_DRUMS {
                get {
                    try {
                        return ((string)(this[this.tableBATCH_SHEETS_New.NUMBER_OF_DRUMSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NUMBER_OF_DRUMS\' in table \'BATCH_SHEETS_New\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBATCH_SHEETS_New.NUMBER_OF_DRUMSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string WEIGHT_PRODUCED {
                get {
                    try {
                        return ((string)(this[this.tableBATCH_SHEETS_New.WEIGHT_PRODUCEDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WEIGHT_PRODUCED\' in table \'BATCH_SHEETS_New\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBATCH_SHEETS_New.WEIGHT_PRODUCEDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string REVISION_DATE {
                get {
                    try {
                        return ((string)(this[this.tableBATCH_SHEETS_New.REVISION_DATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'REVISION_DATE\' in table \'BATCH_SHEETS_New\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBATCH_SHEETS_New.REVISION_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string FORM_VERSION {
                get {
                    try {
                        return ((string)(this[this.tableBATCH_SHEETS_New.FORM_VERSIONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FORM_VERSION\' in table \'BATCH_SHEETS_New\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBATCH_SHEETS_New.FORM_VERSIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string MIXER_BATCH_SHEET {
                get {
                    try {
                        return ((string)(this[this.tableBATCH_SHEETS_New.MIXER_BATCH_SHEETColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MIXER_BATCH_SHEET\' in table \'BATCH_SHEETS_New\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBATCH_SHEETS_New.MIXER_BATCH_SHEETColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string INST2 {
                get {
                    try {
                        return ((string)(this[this.tableBATCH_SHEETS_New.INST2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'INST2\' in table \'BATCH_SHEETS_New\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBATCH_SHEETS_New.INST2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string SAMPLE_AND_LABEL {
                get {
                    try {
                        return ((string)(this[this.tableBATCH_SHEETS_New.SAMPLE_AND_LABELColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SAMPLE_AND_LABEL\' in table \'BATCH_SHEETS_New\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBATCH_SHEETS_New.SAMPLE_AND_LABELColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string INGRED {
                get {
                    try {
                        return ((string)(this[this.tableBATCH_SHEETS_New.INGREDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'INGRED\' in table \'BATCH_SHEETS_New\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBATCH_SHEETS_New.INGREDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string POT_FORMULA {
                get {
                    try {
                        return ((string)(this[this.tableBATCH_SHEETS_New.POT_FORMULAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'POT_FORMULA\' in table \'BATCH_SHEETS_New\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBATCH_SHEETS_New.POT_FORMULAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string BLADE_SPEED {
                get {
                    try {
                        return ((string)(this[this.tableBATCH_SHEETS_New.BLADE_SPEEDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BLADE_SPEED\' in table \'BATCH_SHEETS_New\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBATCH_SHEETS_New.BLADE_SPEEDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string SPEED {
                get {
                    try {
                        return ((string)(this[this.tableBATCH_SHEETS_New.SPEEDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SPEED\' in table \'BATCH_SHEETS_New\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBATCH_SHEETS_New.SPEEDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string PRESS_DATA {
                get {
                    try {
                        return ((string)(this[this.tableBATCH_SHEETS_New.PRESS_DATAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PRESS_DATA\' in table \'BATCH_SHEETS_New\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBATCH_SHEETS_New.PRESS_DATAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string EXPIRATION_DATE {
                get {
                    try {
                        return ((string)(this[this.tableBATCH_SHEETS_New.EXPIRATION_DATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EXPIRATION_DATE\' in table \'BATCH_SHEETS_New\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBATCH_SHEETS_New.EXPIRATION_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string STORAGE {
                get {
                    try {
                        return ((string)(this[this.tableBATCH_SHEETS_New.STORAGEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'STORAGE\' in table \'BATCH_SHEETS_New\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBATCH_SHEETS_New.STORAGEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string THEOR_WT {
                get {
                    try {
                        return ((string)(this[this.tableBATCH_SHEETS_New.THEOR_WTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'THEOR_WT\' in table \'BATCH_SHEETS_New\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBATCH_SHEETS_New.THEOR_WTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string OPER {
                get {
                    try {
                        return ((string)(this[this.tableBATCH_SHEETS_New.OPERColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OPER\' in table \'BATCH_SHEETS_New\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBATCH_SHEETS_New.OPERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string OPER_Copy {
                get {
                    try {
                        return ((string)(this[this.tableBATCH_SHEETS_New.OPER_CopyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OPER_Copy\' in table \'BATCH_SHEETS_New\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBATCH_SHEETS_New.OPER_CopyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Adage_Item_Code {
                get {
                    try {
                        return ((string)(this[this.tableBATCH_SHEETS_New.Adage_Item_CodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Adage_Item_Code\' in table \'BATCH_SHEETS_New\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBATCH_SHEETS_New.Adage_Item_CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public System.DateTime LastUpdate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableBATCH_SHEETS_New.LastUpdateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LastUpdate\' in table \'BATCH_SHEETS_New\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBATCH_SHEETS_New.LastUpdateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string WhichUser {
                get {
                    try {
                        return ((string)(this[this.tableBATCH_SHEETS_New.WhichUserColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WhichUser\' in table \'BATCH_SHEETS_New\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBATCH_SHEETS_New.WhichUserColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string NameofMachine {
                get {
                    try {
                        return ((string)(this[this.tableBATCH_SHEETS_New.NameofMachineColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NameofMachine\' in table \'BATCH_SHEETS_New\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBATCH_SHEETS_New.NameofMachineColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string COMMENTS {
                get {
                    try {
                        return ((string)(this[this.tableBATCH_SHEETS_New.COMMENTSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'COMMENTS\' in table \'BATCH_SHEETS_New\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBATCH_SHEETS_New.COMMENTSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsDATENull() {
                return this.IsNull(this.tableBATCH_SHEETS_New.DATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetDATENull() {
                this[this.tableBATCH_SHEETS_New.DATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsMIXERNull() {
                return this.IsNull(this.tableBATCH_SHEETS_New.MIXERColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetMIXERNull() {
                this[this.tableBATCH_SHEETS_New.MIXERColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsGRADENull() {
                return this.IsNull(this.tableBATCH_SHEETS_New.GRADEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetGRADENull() {
                this[this.tableBATCH_SHEETS_New.GRADEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsBATCH_NUMBERNull() {
                return this.IsNull(this.tableBATCH_SHEETS_New.BATCH_NUMBERColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetBATCH_NUMBERNull() {
                this[this.tableBATCH_SHEETS_New.BATCH_NUMBERColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsINGREDIENT1Null() {
                return this.IsNull(this.tableBATCH_SHEETS_New.INGREDIENT1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetINGREDIENT1Null() {
                this[this.tableBATCH_SHEETS_New.INGREDIENT1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsINGREDIENT2Null() {
                return this.IsNull(this.tableBATCH_SHEETS_New.INGREDIENT2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetINGREDIENT2Null() {
                this[this.tableBATCH_SHEETS_New.INGREDIENT2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsINGREDIENT3Null() {
                return this.IsNull(this.tableBATCH_SHEETS_New.INGREDIENT3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetINGREDIENT3Null() {
                this[this.tableBATCH_SHEETS_New.INGREDIENT3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsINGREDIENT4Null() {
                return this.IsNull(this.tableBATCH_SHEETS_New.INGREDIENT4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetINGREDIENT4Null() {
                this[this.tableBATCH_SHEETS_New.INGREDIENT4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsINGREDIENT5Null() {
                return this.IsNull(this.tableBATCH_SHEETS_New.INGREDIENT5Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetINGREDIENT5Null() {
                this[this.tableBATCH_SHEETS_New.INGREDIENT5Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsINGREDIENT6Null() {
                return this.IsNull(this.tableBATCH_SHEETS_New.INGREDIENT6Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetINGREDIENT6Null() {
                this[this.tableBATCH_SHEETS_New.INGREDIENT6Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsINGREDIENT7Null() {
                return this.IsNull(this.tableBATCH_SHEETS_New.INGREDIENT7Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetINGREDIENT7Null() {
                this[this.tableBATCH_SHEETS_New.INGREDIENT7Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsINGREDIENT8Null() {
                return this.IsNull(this.tableBATCH_SHEETS_New.INGREDIENT8Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetINGREDIENT8Null() {
                this[this.tableBATCH_SHEETS_New.INGREDIENT8Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsINGREDIENT9Null() {
                return this.IsNull(this.tableBATCH_SHEETS_New.INGREDIENT9Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetINGREDIENT9Null() {
                this[this.tableBATCH_SHEETS_New.INGREDIENT9Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsINGREDIENT10Null() {
                return this.IsNull(this.tableBATCH_SHEETS_New.INGREDIENT10Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetINGREDIENT10Null() {
                this[this.tableBATCH_SHEETS_New.INGREDIENT10Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsINGREDIENT11Null() {
                return this.IsNull(this.tableBATCH_SHEETS_New.INGREDIENT11Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetINGREDIENT11Null() {
                this[this.tableBATCH_SHEETS_New.INGREDIENT11Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsINGREDIENT12Null() {
                return this.IsNull(this.tableBATCH_SHEETS_New.INGREDIENT12Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetINGREDIENT12Null() {
                this[this.tableBATCH_SHEETS_New.INGREDIENT12Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsLOT_NO1Null() {
                return this.IsNull(this.tableBATCH_SHEETS_New.LOT_NO1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetLOT_NO1Null() {
                this[this.tableBATCH_SHEETS_New.LOT_NO1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsLOT_NO2Null() {
                return this.IsNull(this.tableBATCH_SHEETS_New.LOT_NO2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetLOT_NO2Null() {
                this[this.tableBATCH_SHEETS_New.LOT_NO2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsLOT_NO3Null() {
                return this.IsNull(this.tableBATCH_SHEETS_New.LOT_NO3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetLOT_NO3Null() {
                this[this.tableBATCH_SHEETS_New.LOT_NO3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsLOT_NO4Null() {
                return this.IsNull(this.tableBATCH_SHEETS_New.LOT_NO4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetLOT_NO4Null() {
                this[this.tableBATCH_SHEETS_New.LOT_NO4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsLOT_NO5Null() {
                return this.IsNull(this.tableBATCH_SHEETS_New.LOT_NO5Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetLOT_NO5Null() {
                this[this.tableBATCH_SHEETS_New.LOT_NO5Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsLOT_NO6Null() {
                return this.IsNull(this.tableBATCH_SHEETS_New.LOT_NO6Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetLOT_NO6Null() {
                this[this.tableBATCH_SHEETS_New.LOT_NO6Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsLOT_NO7Null() {
                return this.IsNull(this.tableBATCH_SHEETS_New.LOT_NO7Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetLOT_NO7Null() {
                this[this.tableBATCH_SHEETS_New.LOT_NO7Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsLOT_NO8Null() {
                return this.IsNull(this.tableBATCH_SHEETS_New.LOT_NO8Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetLOT_NO8Null() {
                this[this.tableBATCH_SHEETS_New.LOT_NO8Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsLOT_NO9Null() {
                return this.IsNull(this.tableBATCH_SHEETS_New.LOT_NO9Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetLOT_NO9Null() {
                this[this.tableBATCH_SHEETS_New.LOT_NO9Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsLOT_NO10Null() {
                return this.IsNull(this.tableBATCH_SHEETS_New.LOT_NO10Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetLOT_NO10Null() {
                this[this.tableBATCH_SHEETS_New.LOT_NO10Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsLOT_NO11Null() {
                return this.IsNull(this.tableBATCH_SHEETS_New.LOT_NO11Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetLOT_NO11Null() {
                this[this.tableBATCH_SHEETS_New.LOT_NO11Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsLOT_NO12Null() {
                return this.IsNull(this.tableBATCH_SHEETS_New.LOT_NO12Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetLOT_NO12Null() {
                this[this.tableBATCH_SHEETS_New.LOT_NO12Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsAMOUNT1Null() {
                return this.IsNull(this.tableBATCH_SHEETS_New.AMOUNT1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetAMOUNT1Null() {
                this[this.tableBATCH_SHEETS_New.AMOUNT1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsAMOUNT2Null() {
                return this.IsNull(this.tableBATCH_SHEETS_New.AMOUNT2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetAMOUNT2Null() {
                this[this.tableBATCH_SHEETS_New.AMOUNT2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsAMOUNT3Null() {
                return this.IsNull(this.tableBATCH_SHEETS_New.AMOUNT3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetAMOUNT3Null() {
                this[this.tableBATCH_SHEETS_New.AMOUNT3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsAMOUNT4Null() {
                return this.IsNull(this.tableBATCH_SHEETS_New.AMOUNT4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetAMOUNT4Null() {
                this[this.tableBATCH_SHEETS_New.AMOUNT4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsAMOUNT5Null() {
                return this.IsNull(this.tableBATCH_SHEETS_New.AMOUNT5Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetAMOUNT5Null() {
                this[this.tableBATCH_SHEETS_New.AMOUNT5Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsAMOUNT6Null() {
                return this.IsNull(this.tableBATCH_SHEETS_New.AMOUNT6Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetAMOUNT6Null() {
                this[this.tableBATCH_SHEETS_New.AMOUNT6Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsAMOUNT7Null() {
                return this.IsNull(this.tableBATCH_SHEETS_New.AMOUNT7Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetAMOUNT7Null() {
                this[this.tableBATCH_SHEETS_New.AMOUNT7Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsAMOUNT8Null() {
                return this.IsNull(this.tableBATCH_SHEETS_New.AMOUNT8Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetAMOUNT8Null() {
                this[this.tableBATCH_SHEETS_New.AMOUNT8Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsAMOUNT9Null() {
                return this.IsNull(this.tableBATCH_SHEETS_New.AMOUNT9Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetAMOUNT9Null() {
                this[this.tableBATCH_SHEETS_New.AMOUNT9Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsAMOUNT10Null() {
                return this.IsNull(this.tableBATCH_SHEETS_New.AMOUNT10Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetAMOUNT10Null() {
                this[this.tableBATCH_SHEETS_New.AMOUNT10Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsAMOUNT11Null() {
                return this.IsNull(this.tableBATCH_SHEETS_New.AMOUNT11Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetAMOUNT11Null() {
                this[this.tableBATCH_SHEETS_New.AMOUNT11Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsAMOUNT12Null() {
                return this.IsNull(this.tableBATCH_SHEETS_New.AMOUNT12Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetAMOUNT12Null() {
                this[this.tableBATCH_SHEETS_New.AMOUNT12Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsLOADED_BY1Null() {
                return this.IsNull(this.tableBATCH_SHEETS_New.LOADED_BY1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetLOADED_BY1Null() {
                this[this.tableBATCH_SHEETS_New.LOADED_BY1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsLOADED_BY2Null() {
                return this.IsNull(this.tableBATCH_SHEETS_New.LOADED_BY2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetLOADED_BY2Null() {
                this[this.tableBATCH_SHEETS_New.LOADED_BY2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsLOADED_BY3Null() {
                return this.IsNull(this.tableBATCH_SHEETS_New.LOADED_BY3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetLOADED_BY3Null() {
                this[this.tableBATCH_SHEETS_New.LOADED_BY3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsLOADED_BY4Null() {
                return this.IsNull(this.tableBATCH_SHEETS_New.LOADED_BY4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetLOADED_BY4Null() {
                this[this.tableBATCH_SHEETS_New.LOADED_BY4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsLOADED_BY5Null() {
                return this.IsNull(this.tableBATCH_SHEETS_New.LOADED_BY5Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetLOADED_BY5Null() {
                this[this.tableBATCH_SHEETS_New.LOADED_BY5Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsLOADED_BY6Null() {
                return this.IsNull(this.tableBATCH_SHEETS_New.LOADED_BY6Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetLOADED_BY6Null() {
                this[this.tableBATCH_SHEETS_New.LOADED_BY6Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsLOADED_BY7Null() {
                return this.IsNull(this.tableBATCH_SHEETS_New.LOADED_BY7Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetLOADED_BY7Null() {
                this[this.tableBATCH_SHEETS_New.LOADED_BY7Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsLOADED_BY8Null() {
                return this.IsNull(this.tableBATCH_SHEETS_New.LOADED_BY8Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetLOADED_BY8Null() {
                this[this.tableBATCH_SHEETS_New.LOADED_BY8Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsLOADED_BY9Null() {
                return this.IsNull(this.tableBATCH_SHEETS_New.LOADED_BY9Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetLOADED_BY9Null() {
                this[this.tableBATCH_SHEETS_New.LOADED_BY9Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsLOADED_BY10Null() {
                return this.IsNull(this.tableBATCH_SHEETS_New.LOADED_BY10Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetLOADED_BY10Null() {
                this[this.tableBATCH_SHEETS_New.LOADED_BY10Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsLOADED_BY11Null() {
                return this.IsNull(this.tableBATCH_SHEETS_New.LOADED_BY11Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetLOADED_BY11Null() {
                this[this.tableBATCH_SHEETS_New.LOADED_BY11Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsLOADED_BY12Null() {
                return this.IsNull(this.tableBATCH_SHEETS_New.LOADED_BY12Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetLOADED_BY12Null() {
                this[this.tableBATCH_SHEETS_New.LOADED_BY12Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsMIXING_INSTRUCTIONSNull() {
                return this.IsNull(this.tableBATCH_SHEETS_New.MIXING_INSTRUCTIONSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetMIXING_INSTRUCTIONSNull() {
                this[this.tableBATCH_SHEETS_New.MIXING_INSTRUCTIONSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsTYPE_OF_DRUMNull() {
                return this.IsNull(this.tableBATCH_SHEETS_New.TYPE_OF_DRUMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetTYPE_OF_DRUMNull() {
                this[this.tableBATCH_SHEETS_New.TYPE_OF_DRUMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsWEIGHT_PER_DRUMNull() {
                return this.IsNull(this.tableBATCH_SHEETS_New.WEIGHT_PER_DRUMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetWEIGHT_PER_DRUMNull() {
                this[this.tableBATCH_SHEETS_New.WEIGHT_PER_DRUMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsNUMBER_OF_DRUMSNull() {
                return this.IsNull(this.tableBATCH_SHEETS_New.NUMBER_OF_DRUMSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetNUMBER_OF_DRUMSNull() {
                this[this.tableBATCH_SHEETS_New.NUMBER_OF_DRUMSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsWEIGHT_PRODUCEDNull() {
                return this.IsNull(this.tableBATCH_SHEETS_New.WEIGHT_PRODUCEDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetWEIGHT_PRODUCEDNull() {
                this[this.tableBATCH_SHEETS_New.WEIGHT_PRODUCEDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsREVISION_DATENull() {
                return this.IsNull(this.tableBATCH_SHEETS_New.REVISION_DATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetREVISION_DATENull() {
                this[this.tableBATCH_SHEETS_New.REVISION_DATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsFORM_VERSIONNull() {
                return this.IsNull(this.tableBATCH_SHEETS_New.FORM_VERSIONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetFORM_VERSIONNull() {
                this[this.tableBATCH_SHEETS_New.FORM_VERSIONColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsMIXER_BATCH_SHEETNull() {
                return this.IsNull(this.tableBATCH_SHEETS_New.MIXER_BATCH_SHEETColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetMIXER_BATCH_SHEETNull() {
                this[this.tableBATCH_SHEETS_New.MIXER_BATCH_SHEETColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsINST2Null() {
                return this.IsNull(this.tableBATCH_SHEETS_New.INST2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetINST2Null() {
                this[this.tableBATCH_SHEETS_New.INST2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsSAMPLE_AND_LABELNull() {
                return this.IsNull(this.tableBATCH_SHEETS_New.SAMPLE_AND_LABELColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetSAMPLE_AND_LABELNull() {
                this[this.tableBATCH_SHEETS_New.SAMPLE_AND_LABELColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsINGREDNull() {
                return this.IsNull(this.tableBATCH_SHEETS_New.INGREDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetINGREDNull() {
                this[this.tableBATCH_SHEETS_New.INGREDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsPOT_FORMULANull() {
                return this.IsNull(this.tableBATCH_SHEETS_New.POT_FORMULAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetPOT_FORMULANull() {
                this[this.tableBATCH_SHEETS_New.POT_FORMULAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsBLADE_SPEEDNull() {
                return this.IsNull(this.tableBATCH_SHEETS_New.BLADE_SPEEDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetBLADE_SPEEDNull() {
                this[this.tableBATCH_SHEETS_New.BLADE_SPEEDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsSPEEDNull() {
                return this.IsNull(this.tableBATCH_SHEETS_New.SPEEDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetSPEEDNull() {
                this[this.tableBATCH_SHEETS_New.SPEEDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsPRESS_DATANull() {
                return this.IsNull(this.tableBATCH_SHEETS_New.PRESS_DATAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetPRESS_DATANull() {
                this[this.tableBATCH_SHEETS_New.PRESS_DATAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsEXPIRATION_DATENull() {
                return this.IsNull(this.tableBATCH_SHEETS_New.EXPIRATION_DATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetEXPIRATION_DATENull() {
                this[this.tableBATCH_SHEETS_New.EXPIRATION_DATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsSTORAGENull() {
                return this.IsNull(this.tableBATCH_SHEETS_New.STORAGEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetSTORAGENull() {
                this[this.tableBATCH_SHEETS_New.STORAGEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsTHEOR_WTNull() {
                return this.IsNull(this.tableBATCH_SHEETS_New.THEOR_WTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetTHEOR_WTNull() {
                this[this.tableBATCH_SHEETS_New.THEOR_WTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsOPERNull() {
                return this.IsNull(this.tableBATCH_SHEETS_New.OPERColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetOPERNull() {
                this[this.tableBATCH_SHEETS_New.OPERColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsOPER_CopyNull() {
                return this.IsNull(this.tableBATCH_SHEETS_New.OPER_CopyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetOPER_CopyNull() {
                this[this.tableBATCH_SHEETS_New.OPER_CopyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsAdage_Item_CodeNull() {
                return this.IsNull(this.tableBATCH_SHEETS_New.Adage_Item_CodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetAdage_Item_CodeNull() {
                this[this.tableBATCH_SHEETS_New.Adage_Item_CodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsLastUpdateNull() {
                return this.IsNull(this.tableBATCH_SHEETS_New.LastUpdateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetLastUpdateNull() {
                this[this.tableBATCH_SHEETS_New.LastUpdateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsWhichUserNull() {
                return this.IsNull(this.tableBATCH_SHEETS_New.WhichUserColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetWhichUserNull() {
                this[this.tableBATCH_SHEETS_New.WhichUserColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsNameofMachineNull() {
                return this.IsNull(this.tableBATCH_SHEETS_New.NameofMachineColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetNameofMachineNull() {
                this[this.tableBATCH_SHEETS_New.NameofMachineColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsCOMMENTSNull() {
                return this.IsNull(this.tableBATCH_SHEETS_New.COMMENTSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetCOMMENTSNull() {
                this[this.tableBATCH_SHEETS_New.COMMENTSColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public class BATCH_SHEETS_NewRowChangeEvent : global::System.EventArgs {
            
            private BATCH_SHEETS_NewRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public BATCH_SHEETS_NewRowChangeEvent(BATCH_SHEETS_NewRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public BATCH_SHEETS_NewRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace BatchSheetsWebPage.DataSet2TableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class BATCH_SHEETS_NewTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public BATCH_SHEETS_NewTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "BATCH_SHEETS_New";
            tableMapping.ColumnMappings.Add("Row", "Row");
            tableMapping.ColumnMappings.Add("DATE", "DATE");
            tableMapping.ColumnMappings.Add("MIXER", "MIXER");
            tableMapping.ColumnMappings.Add("GRADE", "GRADE");
            tableMapping.ColumnMappings.Add("BATCH_NUMBER", "BATCH_NUMBER");
            tableMapping.ColumnMappings.Add("INGREDIENT1", "INGREDIENT1");
            tableMapping.ColumnMappings.Add("INGREDIENT2", "INGREDIENT2");
            tableMapping.ColumnMappings.Add("INGREDIENT3", "INGREDIENT3");
            tableMapping.ColumnMappings.Add("INGREDIENT4", "INGREDIENT4");
            tableMapping.ColumnMappings.Add("INGREDIENT5", "INGREDIENT5");
            tableMapping.ColumnMappings.Add("INGREDIENT6", "INGREDIENT6");
            tableMapping.ColumnMappings.Add("INGREDIENT7", "INGREDIENT7");
            tableMapping.ColumnMappings.Add("INGREDIENT8", "INGREDIENT8");
            tableMapping.ColumnMappings.Add("INGREDIENT9", "INGREDIENT9");
            tableMapping.ColumnMappings.Add("INGREDIENT10", "INGREDIENT10");
            tableMapping.ColumnMappings.Add("INGREDIENT11", "INGREDIENT11");
            tableMapping.ColumnMappings.Add("INGREDIENT12", "INGREDIENT12");
            tableMapping.ColumnMappings.Add("LOT_NO1", "LOT_NO1");
            tableMapping.ColumnMappings.Add("LOT_NO2", "LOT_NO2");
            tableMapping.ColumnMappings.Add("LOT_NO3", "LOT_NO3");
            tableMapping.ColumnMappings.Add("LOT_NO4", "LOT_NO4");
            tableMapping.ColumnMappings.Add("LOT_NO5", "LOT_NO5");
            tableMapping.ColumnMappings.Add("LOT_NO6", "LOT_NO6");
            tableMapping.ColumnMappings.Add("LOT_NO7", "LOT_NO7");
            tableMapping.ColumnMappings.Add("LOT_NO8", "LOT_NO8");
            tableMapping.ColumnMappings.Add("LOT_NO9", "LOT_NO9");
            tableMapping.ColumnMappings.Add("LOT_NO10", "LOT_NO10");
            tableMapping.ColumnMappings.Add("LOT_NO11", "LOT_NO11");
            tableMapping.ColumnMappings.Add("LOT_NO12", "LOT_NO12");
            tableMapping.ColumnMappings.Add("AMOUNT1", "AMOUNT1");
            tableMapping.ColumnMappings.Add("AMOUNT2", "AMOUNT2");
            tableMapping.ColumnMappings.Add("AMOUNT3", "AMOUNT3");
            tableMapping.ColumnMappings.Add("AMOUNT4", "AMOUNT4");
            tableMapping.ColumnMappings.Add("AMOUNT5", "AMOUNT5");
            tableMapping.ColumnMappings.Add("AMOUNT6", "AMOUNT6");
            tableMapping.ColumnMappings.Add("AMOUNT7", "AMOUNT7");
            tableMapping.ColumnMappings.Add("AMOUNT8", "AMOUNT8");
            tableMapping.ColumnMappings.Add("AMOUNT9", "AMOUNT9");
            tableMapping.ColumnMappings.Add("AMOUNT10", "AMOUNT10");
            tableMapping.ColumnMappings.Add("AMOUNT11", "AMOUNT11");
            tableMapping.ColumnMappings.Add("AMOUNT12", "AMOUNT12");
            tableMapping.ColumnMappings.Add("LOADED_BY1", "LOADED_BY1");
            tableMapping.ColumnMappings.Add("LOADED_BY2", "LOADED_BY2");
            tableMapping.ColumnMappings.Add("LOADED_BY3", "LOADED_BY3");
            tableMapping.ColumnMappings.Add("LOADED_BY4", "LOADED_BY4");
            tableMapping.ColumnMappings.Add("LOADED_BY5", "LOADED_BY5");
            tableMapping.ColumnMappings.Add("LOADED_BY6", "LOADED_BY6");
            tableMapping.ColumnMappings.Add("LOADED_BY7", "LOADED_BY7");
            tableMapping.ColumnMappings.Add("LOADED_BY8", "LOADED_BY8");
            tableMapping.ColumnMappings.Add("LOADED_BY9", "LOADED_BY9");
            tableMapping.ColumnMappings.Add("LOADED_BY10", "LOADED_BY10");
            tableMapping.ColumnMappings.Add("LOADED_BY11", "LOADED_BY11");
            tableMapping.ColumnMappings.Add("LOADED_BY12", "LOADED_BY12");
            tableMapping.ColumnMappings.Add("MIXING_INSTRUCTIONS", "MIXING_INSTRUCTIONS");
            tableMapping.ColumnMappings.Add("TYPE_OF_DRUM", "TYPE_OF_DRUM");
            tableMapping.ColumnMappings.Add("WEIGHT_PER_DRUM", "WEIGHT_PER_DRUM");
            tableMapping.ColumnMappings.Add("NUMBER_OF_DRUMS", "NUMBER_OF_DRUMS");
            tableMapping.ColumnMappings.Add("WEIGHT_PRODUCED", "WEIGHT_PRODUCED");
            tableMapping.ColumnMappings.Add("REVISION_DATE", "REVISION_DATE");
            tableMapping.ColumnMappings.Add("FORM_VERSION", "FORM_VERSION");
            tableMapping.ColumnMappings.Add("MIXER_BATCH_SHEET", "MIXER_BATCH_SHEET");
            tableMapping.ColumnMappings.Add("INST2", "INST2");
            tableMapping.ColumnMappings.Add("SAMPLE_AND_LABEL", "SAMPLE_AND_LABEL");
            tableMapping.ColumnMappings.Add("INGRED", "INGRED");
            tableMapping.ColumnMappings.Add("POT_FORMULA", "POT_FORMULA");
            tableMapping.ColumnMappings.Add("BLADE_SPEED", "BLADE_SPEED");
            tableMapping.ColumnMappings.Add("SPEED", "SPEED");
            tableMapping.ColumnMappings.Add("PRESS_DATA", "PRESS_DATA");
            tableMapping.ColumnMappings.Add("EXPIRATION_DATE", "EXPIRATION_DATE");
            tableMapping.ColumnMappings.Add("STORAGE", "STORAGE");
            tableMapping.ColumnMappings.Add("THEOR_WT", "THEOR_WT");
            tableMapping.ColumnMappings.Add("OPER", "OPER");
            tableMapping.ColumnMappings.Add("OPER_Copy", "OPER_Copy");
            tableMapping.ColumnMappings.Add("Adage_Item_Code", "Adage_Item_Code");
            tableMapping.ColumnMappings.Add("LastUpdate", "LastUpdate");
            tableMapping.ColumnMappings.Add("WhichUser", "WhichUser");
            tableMapping.ColumnMappings.Add("NameofMachine", "NameofMachine");
            tableMapping.ColumnMappings.Add("COMMENTS", "COMMENTS");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[BATCH_SHEETS_New] WHERE (([Row] = @Original_Row))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Row", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Row", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[BATCH_SHEETS_New] ([DATE], [MIXER], [GRADE], [BATCH_NUMBER], [" +
                "INGREDIENT1], [INGREDIENT2], [INGREDIENT3], [INGREDIENT4], [INGREDIENT5], [INGRE" +
                "DIENT6], [INGREDIENT7], [INGREDIENT8], [INGREDIENT9], [INGREDIENT10], [INGREDIEN" +
                "T11], [INGREDIENT12], [LOT_NO1], [LOT_NO2], [LOT_NO3], [LOT_NO4], [LOT_NO5], [LO" +
                "T_NO6], [LOT_NO7], [LOT_NO8], [LOT_NO9], [LOT_NO10], [LOT_NO11], [LOT_NO12], [AM" +
                "OUNT1], [AMOUNT2], [AMOUNT3], [AMOUNT4], [AMOUNT5], [AMOUNT6], [AMOUNT7], [AMOUN" +
                "T8], [AMOUNT9], [AMOUNT10], [AMOUNT11], [AMOUNT12], [LOADED_BY1], [LOADED_BY2], " +
                "[LOADED_BY3], [LOADED_BY4], [LOADED_BY5], [LOADED_BY6], [LOADED_BY7], [LOADED_BY" +
                "8], [LOADED_BY9], [LOADED_BY10], [LOADED_BY11], [LOADED_BY12], [MIXING_INSTRUCTI" +
                "ONS], [TYPE_OF_DRUM], [WEIGHT_PER_DRUM], [NUMBER_OF_DRUMS], [WEIGHT_PRODUCED], [" +
                "REVISION_DATE], [FORM_VERSION], [MIXER_BATCH_SHEET], [INST2], [SAMPLE_AND_LABEL]" +
                ", [INGRED], [POT_FORMULA], [BLADE_SPEED], [SPEED], [PRESS_DATA], [EXPIRATION_DAT" +
                "E], [STORAGE], [THEOR_WT], [OPER], [OPER_Copy], [Adage_Item_Code], [LastUpdate]," +
                " [WhichUser], [NameofMachine], [COMMENTS]) VALUES (@DATE, @MIXER, @GRADE, @BATCH" +
                "_NUMBER, @INGREDIENT1, @INGREDIENT2, @INGREDIENT3, @INGREDIENT4, @INGREDIENT5, @" +
                "INGREDIENT6, @INGREDIENT7, @INGREDIENT8, @INGREDIENT9, @INGREDIENT10, @INGREDIEN" +
                "T11, @INGREDIENT12, @LOT_NO1, @LOT_NO2, @LOT_NO3, @LOT_NO4, @LOT_NO5, @LOT_NO6, " +
                "@LOT_NO7, @LOT_NO8, @LOT_NO9, @LOT_NO10, @LOT_NO11, @LOT_NO12, @AMOUNT1, @AMOUNT" +
                "2, @AMOUNT3, @AMOUNT4, @AMOUNT5, @AMOUNT6, @AMOUNT7, @AMOUNT8, @AMOUNT9, @AMOUNT" +
                "10, @AMOUNT11, @AMOUNT12, @LOADED_BY1, @LOADED_BY2, @LOADED_BY3, @LOADED_BY4, @L" +
                "OADED_BY5, @LOADED_BY6, @LOADED_BY7, @LOADED_BY8, @LOADED_BY9, @LOADED_BY10, @LO" +
                "ADED_BY11, @LOADED_BY12, @MIXING_INSTRUCTIONS, @TYPE_OF_DRUM, @WEIGHT_PER_DRUM, " +
                "@NUMBER_OF_DRUMS, @WEIGHT_PRODUCED, @REVISION_DATE, @FORM_VERSION, @MIXER_BATCH_" +
                "SHEET, @INST2, @SAMPLE_AND_LABEL, @INGRED, @POT_FORMULA, @BLADE_SPEED, @SPEED, @" +
                "PRESS_DATA, @EXPIRATION_DATE, @STORAGE, @THEOR_WT, @OPER, @OPER_Copy, @Adage_Ite" +
                "m_Code, @LastUpdate, @WhichUser, @NameofMachine, @COMMENTS)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DATE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MIXER", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MIXER", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GRADE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GRADE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BATCH_NUMBER", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BATCH_NUMBER", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@INGREDIENT1", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "INGREDIENT1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@INGREDIENT2", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "INGREDIENT2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@INGREDIENT3", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "INGREDIENT3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@INGREDIENT4", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "INGREDIENT4", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@INGREDIENT5", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "INGREDIENT5", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@INGREDIENT6", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "INGREDIENT6", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@INGREDIENT7", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "INGREDIENT7", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@INGREDIENT8", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "INGREDIENT8", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@INGREDIENT9", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "INGREDIENT9", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@INGREDIENT10", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "INGREDIENT10", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@INGREDIENT11", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "INGREDIENT11", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@INGREDIENT12", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "INGREDIENT12", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LOT_NO1", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LOT_NO1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LOT_NO2", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LOT_NO2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LOT_NO3", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LOT_NO3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LOT_NO4", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LOT_NO4", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LOT_NO5", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LOT_NO5", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LOT_NO6", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LOT_NO6", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LOT_NO7", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LOT_NO7", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LOT_NO8", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LOT_NO8", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LOT_NO9", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LOT_NO9", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LOT_NO10", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LOT_NO10", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LOT_NO11", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LOT_NO11", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LOT_NO12", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LOT_NO12", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AMOUNT1", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AMOUNT1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AMOUNT2", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AMOUNT2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AMOUNT3", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AMOUNT3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AMOUNT4", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AMOUNT4", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AMOUNT5", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AMOUNT5", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AMOUNT6", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AMOUNT6", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AMOUNT7", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AMOUNT7", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AMOUNT8", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AMOUNT8", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AMOUNT9", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AMOUNT9", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AMOUNT10", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AMOUNT10", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AMOUNT11", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AMOUNT11", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AMOUNT12", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AMOUNT12", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LOADED_BY1", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LOADED_BY1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LOADED_BY2", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LOADED_BY2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LOADED_BY3", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LOADED_BY3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LOADED_BY4", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LOADED_BY4", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LOADED_BY5", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LOADED_BY5", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LOADED_BY6", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LOADED_BY6", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LOADED_BY7", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LOADED_BY7", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LOADED_BY8", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LOADED_BY8", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LOADED_BY9", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LOADED_BY9", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LOADED_BY10", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LOADED_BY10", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LOADED_BY11", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LOADED_BY11", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LOADED_BY12", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LOADED_BY12", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MIXING_INSTRUCTIONS", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MIXING_INSTRUCTIONS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TYPE_OF_DRUM", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TYPE_OF_DRUM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WEIGHT_PER_DRUM", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WEIGHT_PER_DRUM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NUMBER_OF_DRUMS", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NUMBER_OF_DRUMS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WEIGHT_PRODUCED", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WEIGHT_PRODUCED", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@REVISION_DATE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "REVISION_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FORM_VERSION", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FORM_VERSION", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MIXER_BATCH_SHEET", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MIXER_BATCH_SHEET", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@INST2", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "INST2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SAMPLE_AND_LABEL", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SAMPLE_AND_LABEL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@INGRED", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "INGRED", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@POT_FORMULA", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "POT_FORMULA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BLADE_SPEED", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BLADE_SPEED", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SPEED", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SPEED", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PRESS_DATA", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PRESS_DATA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EXPIRATION_DATE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EXPIRATION_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@STORAGE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STORAGE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@THEOR_WT", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "THEOR_WT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OPER", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OPER", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OPER_Copy", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OPER_Copy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Adage_Item_Code", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Adage_Item_Code", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LastUpdate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastUpdate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WhichUser", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WhichUser", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NameofMachine", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NameofMachine", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@COMMENTS", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COMMENTS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[BATCH_SHEETS_New] SET [DATE] = @DATE, [MIXER] = @MIXER, [GRADE] = @" +
                "GRADE, [BATCH_NUMBER] = @BATCH_NUMBER, [INGREDIENT1] = @INGREDIENT1, [INGREDIENT" +
                "2] = @INGREDIENT2, [INGREDIENT3] = @INGREDIENT3, [INGREDIENT4] = @INGREDIENT4, [" +
                "INGREDIENT5] = @INGREDIENT5, [INGREDIENT6] = @INGREDIENT6, [INGREDIENT7] = @INGR" +
                "EDIENT7, [INGREDIENT8] = @INGREDIENT8, [INGREDIENT9] = @INGREDIENT9, [INGREDIENT" +
                "10] = @INGREDIENT10, [INGREDIENT11] = @INGREDIENT11, [INGREDIENT12] = @INGREDIEN" +
                "T12, [LOT_NO1] = @LOT_NO1, [LOT_NO2] = @LOT_NO2, [LOT_NO3] = @LOT_NO3, [LOT_NO4]" +
                " = @LOT_NO4, [LOT_NO5] = @LOT_NO5, [LOT_NO6] = @LOT_NO6, [LOT_NO7] = @LOT_NO7, [" +
                "LOT_NO8] = @LOT_NO8, [LOT_NO9] = @LOT_NO9, [LOT_NO10] = @LOT_NO10, [LOT_NO11] = " +
                "@LOT_NO11, [LOT_NO12] = @LOT_NO12, [AMOUNT1] = @AMOUNT1, [AMOUNT2] = @AMOUNT2, [" +
                "AMOUNT3] = @AMOUNT3, [AMOUNT4] = @AMOUNT4, [AMOUNT5] = @AMOUNT5, [AMOUNT6] = @AM" +
                "OUNT6, [AMOUNT7] = @AMOUNT7, [AMOUNT8] = @AMOUNT8, [AMOUNT9] = @AMOUNT9, [AMOUNT" +
                "10] = @AMOUNT10, [AMOUNT11] = @AMOUNT11, [AMOUNT12] = @AMOUNT12, [LOADED_BY1] = " +
                "@LOADED_BY1, [LOADED_BY2] = @LOADED_BY2, [LOADED_BY3] = @LOADED_BY3, [LOADED_BY4" +
                "] = @LOADED_BY4, [LOADED_BY5] = @LOADED_BY5, [LOADED_BY6] = @LOADED_BY6, [LOADED" +
                "_BY7] = @LOADED_BY7, [LOADED_BY8] = @LOADED_BY8, [LOADED_BY9] = @LOADED_BY9, [LO" +
                "ADED_BY10] = @LOADED_BY10, [LOADED_BY11] = @LOADED_BY11, [LOADED_BY12] = @LOADED" +
                "_BY12, [MIXING_INSTRUCTIONS] = @MIXING_INSTRUCTIONS, [TYPE_OF_DRUM] = @TYPE_OF_D" +
                "RUM, [WEIGHT_PER_DRUM] = @WEIGHT_PER_DRUM, [NUMBER_OF_DRUMS] = @NUMBER_OF_DRUMS," +
                " [WEIGHT_PRODUCED] = @WEIGHT_PRODUCED, [REVISION_DATE] = @REVISION_DATE, [FORM_V" +
                "ERSION] = @FORM_VERSION, [MIXER_BATCH_SHEET] = @MIXER_BATCH_SHEET, [INST2] = @IN" +
                "ST2, [SAMPLE_AND_LABEL] = @SAMPLE_AND_LABEL, [INGRED] = @INGRED, [POT_FORMULA] =" +
                " @POT_FORMULA, [BLADE_SPEED] = @BLADE_SPEED, [SPEED] = @SPEED, [PRESS_DATA] = @P" +
                "RESS_DATA, [EXPIRATION_DATE] = @EXPIRATION_DATE, [STORAGE] = @STORAGE, [THEOR_WT" +
                "] = @THEOR_WT, [OPER] = @OPER, [OPER_Copy] = @OPER_Copy, [Adage_Item_Code] = @Ad" +
                "age_Item_Code, [LastUpdate] = @LastUpdate, [WhichUser] = @WhichUser, [NameofMach" +
                "ine] = @NameofMachine, [COMMENTS] = @COMMENTS WHERE (([Row] = @Original_Row))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DATE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MIXER", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MIXER", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GRADE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GRADE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BATCH_NUMBER", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BATCH_NUMBER", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@INGREDIENT1", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "INGREDIENT1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@INGREDIENT2", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "INGREDIENT2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@INGREDIENT3", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "INGREDIENT3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@INGREDIENT4", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "INGREDIENT4", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@INGREDIENT5", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "INGREDIENT5", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@INGREDIENT6", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "INGREDIENT6", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@INGREDIENT7", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "INGREDIENT7", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@INGREDIENT8", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "INGREDIENT8", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@INGREDIENT9", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "INGREDIENT9", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@INGREDIENT10", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "INGREDIENT10", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@INGREDIENT11", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "INGREDIENT11", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@INGREDIENT12", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "INGREDIENT12", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LOT_NO1", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LOT_NO1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LOT_NO2", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LOT_NO2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LOT_NO3", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LOT_NO3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LOT_NO4", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LOT_NO4", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LOT_NO5", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LOT_NO5", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LOT_NO6", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LOT_NO6", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LOT_NO7", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LOT_NO7", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LOT_NO8", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LOT_NO8", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LOT_NO9", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LOT_NO9", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LOT_NO10", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LOT_NO10", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LOT_NO11", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LOT_NO11", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LOT_NO12", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LOT_NO12", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AMOUNT1", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AMOUNT1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AMOUNT2", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AMOUNT2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AMOUNT3", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AMOUNT3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AMOUNT4", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AMOUNT4", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AMOUNT5", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AMOUNT5", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AMOUNT6", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AMOUNT6", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AMOUNT7", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AMOUNT7", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AMOUNT8", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AMOUNT8", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AMOUNT9", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AMOUNT9", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AMOUNT10", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AMOUNT10", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AMOUNT11", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AMOUNT11", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AMOUNT12", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AMOUNT12", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LOADED_BY1", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LOADED_BY1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LOADED_BY2", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LOADED_BY2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LOADED_BY3", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LOADED_BY3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LOADED_BY4", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LOADED_BY4", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LOADED_BY5", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LOADED_BY5", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LOADED_BY6", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LOADED_BY6", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LOADED_BY7", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LOADED_BY7", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LOADED_BY8", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LOADED_BY8", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LOADED_BY9", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LOADED_BY9", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LOADED_BY10", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LOADED_BY10", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LOADED_BY11", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LOADED_BY11", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LOADED_BY12", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LOADED_BY12", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MIXING_INSTRUCTIONS", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MIXING_INSTRUCTIONS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TYPE_OF_DRUM", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TYPE_OF_DRUM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WEIGHT_PER_DRUM", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WEIGHT_PER_DRUM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NUMBER_OF_DRUMS", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NUMBER_OF_DRUMS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WEIGHT_PRODUCED", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WEIGHT_PRODUCED", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@REVISION_DATE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "REVISION_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FORM_VERSION", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FORM_VERSION", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MIXER_BATCH_SHEET", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MIXER_BATCH_SHEET", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@INST2", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "INST2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SAMPLE_AND_LABEL", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SAMPLE_AND_LABEL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@INGRED", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "INGRED", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@POT_FORMULA", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "POT_FORMULA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BLADE_SPEED", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BLADE_SPEED", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SPEED", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SPEED", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PRESS_DATA", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PRESS_DATA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EXPIRATION_DATE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EXPIRATION_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@STORAGE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STORAGE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@THEOR_WT", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "THEOR_WT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OPER", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OPER", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OPER_Copy", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OPER_Copy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Adage_Item_Code", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Adage_Item_Code", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LastUpdate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastUpdate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WhichUser", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WhichUser", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NameofMachine", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NameofMachine", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@COMMENTS", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COMMENTS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Row", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Row", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["adage_45ConnectionString"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT Row, DATE, MIXER, GRADE, BATCH_NUMBER, INGREDIENT1, INGREDIENT2, INGREDIENT3, INGREDIENT4, INGREDIENT5, INGREDIENT6, INGREDIENT7, INGREDIENT8, INGREDIENT9, INGREDIENT10, INGREDIENT11, INGREDIENT12, LOT_NO1, LOT_NO2, LOT_NO3, LOT_NO4, LOT_NO5, LOT_NO6, LOT_NO7, LOT_NO8, LOT_NO9, LOT_NO10, LOT_NO11, LOT_NO12, AMOUNT1, AMOUNT2, AMOUNT3, AMOUNT4, AMOUNT5, AMOUNT6, AMOUNT7, AMOUNT8, AMOUNT9, AMOUNT10, AMOUNT11, AMOUNT12, LOADED_BY1, LOADED_BY2, LOADED_BY3, LOADED_BY4, LOADED_BY5, LOADED_BY6, LOADED_BY7, LOADED_BY8, LOADED_BY9, LOADED_BY10, LOADED_BY11, LOADED_BY12, MIXING_INSTRUCTIONS, TYPE_OF_DRUM, WEIGHT_PER_DRUM, NUMBER_OF_DRUMS, WEIGHT_PRODUCED, REVISION_DATE, FORM_VERSION, MIXER_BATCH_SHEET, INST2, SAMPLE_AND_LABEL, INGRED, POT_FORMULA, BLADE_SPEED, SPEED, PRESS_DATA, EXPIRATION_DATE, STORAGE, THEOR_WT, OPER, OPER_Copy, Adage_Item_Code, LastUpdate, WhichUser, NameofMachine, COMMENTS FROM dbo.BATCH_SHEETS_New
where Row=@rowid";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@rowid", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "Row", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet2.BATCH_SHEETS_NewDataTable dataTable, int rowid) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(rowid));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet2.BATCH_SHEETS_NewDataTable GetData(int rowid) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(rowid));
            DataSet2.BATCH_SHEETS_NewDataTable dataTable = new DataSet2.BATCH_SHEETS_NewDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet2.BATCH_SHEETS_NewDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet2 dataSet) {
            return this.Adapter.Update(dataSet, "BATCH_SHEETS_New");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_Row) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_Row));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string DATE, 
                    string MIXER, 
                    string GRADE, 
                    string BATCH_NUMBER, 
                    string INGREDIENT1, 
                    string INGREDIENT2, 
                    string INGREDIENT3, 
                    string INGREDIENT4, 
                    string INGREDIENT5, 
                    string INGREDIENT6, 
                    string INGREDIENT7, 
                    string INGREDIENT8, 
                    string INGREDIENT9, 
                    string INGREDIENT10, 
                    string INGREDIENT11, 
                    string INGREDIENT12, 
                    string LOT_NO1, 
                    string LOT_NO2, 
                    string LOT_NO3, 
                    string LOT_NO4, 
                    string LOT_NO5, 
                    string LOT_NO6, 
                    string LOT_NO7, 
                    string LOT_NO8, 
                    string LOT_NO9, 
                    string LOT_NO10, 
                    string LOT_NO11, 
                    string LOT_NO12, 
                    string AMOUNT1, 
                    string AMOUNT2, 
                    string AMOUNT3, 
                    string AMOUNT4, 
                    string AMOUNT5, 
                    string AMOUNT6, 
                    string AMOUNT7, 
                    string AMOUNT8, 
                    string AMOUNT9, 
                    string AMOUNT10, 
                    string AMOUNT11, 
                    string AMOUNT12, 
                    string LOADED_BY1, 
                    string LOADED_BY2, 
                    string LOADED_BY3, 
                    string LOADED_BY4, 
                    string LOADED_BY5, 
                    string LOADED_BY6, 
                    string LOADED_BY7, 
                    string LOADED_BY8, 
                    string LOADED_BY9, 
                    string LOADED_BY10, 
                    string LOADED_BY11, 
                    string LOADED_BY12, 
                    string MIXING_INSTRUCTIONS, 
                    string TYPE_OF_DRUM, 
                    string WEIGHT_PER_DRUM, 
                    string NUMBER_OF_DRUMS, 
                    string WEIGHT_PRODUCED, 
                    string REVISION_DATE, 
                    string FORM_VERSION, 
                    string MIXER_BATCH_SHEET, 
                    string INST2, 
                    string SAMPLE_AND_LABEL, 
                    string INGRED, 
                    string POT_FORMULA, 
                    string BLADE_SPEED, 
                    string SPEED, 
                    string PRESS_DATA, 
                    string EXPIRATION_DATE, 
                    string STORAGE, 
                    string THEOR_WT, 
                    string OPER, 
                    string OPER_Copy, 
                    string Adage_Item_Code, 
                    global::System.Nullable<global::System.DateTime> LastUpdate, 
                    string WhichUser, 
                    string NameofMachine, 
                    string COMMENTS) {
            if ((DATE == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(DATE));
            }
            if ((MIXER == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(MIXER));
            }
            if ((GRADE == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(GRADE));
            }
            if ((BATCH_NUMBER == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(BATCH_NUMBER));
            }
            if ((INGREDIENT1 == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(INGREDIENT1));
            }
            if ((INGREDIENT2 == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(INGREDIENT2));
            }
            if ((INGREDIENT3 == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(INGREDIENT3));
            }
            if ((INGREDIENT4 == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(INGREDIENT4));
            }
            if ((INGREDIENT5 == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(INGREDIENT5));
            }
            if ((INGREDIENT6 == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(INGREDIENT6));
            }
            if ((INGREDIENT7 == null)) {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(INGREDIENT7));
            }
            if ((INGREDIENT8 == null)) {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(INGREDIENT8));
            }
            if ((INGREDIENT9 == null)) {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(INGREDIENT9));
            }
            if ((INGREDIENT10 == null)) {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = ((string)(INGREDIENT10));
            }
            if ((INGREDIENT11 == null)) {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = ((string)(INGREDIENT11));
            }
            if ((INGREDIENT12 == null)) {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = ((string)(INGREDIENT12));
            }
            if ((LOT_NO1 == null)) {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = ((string)(LOT_NO1));
            }
            if ((LOT_NO2 == null)) {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = ((string)(LOT_NO2));
            }
            if ((LOT_NO3 == null)) {
                this.Adapter.InsertCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = ((string)(LOT_NO3));
            }
            if ((LOT_NO4 == null)) {
                this.Adapter.InsertCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = ((string)(LOT_NO4));
            }
            if ((LOT_NO5 == null)) {
                this.Adapter.InsertCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = ((string)(LOT_NO5));
            }
            if ((LOT_NO6 == null)) {
                this.Adapter.InsertCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = ((string)(LOT_NO6));
            }
            if ((LOT_NO7 == null)) {
                this.Adapter.InsertCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[22].Value = ((string)(LOT_NO7));
            }
            if ((LOT_NO8 == null)) {
                this.Adapter.InsertCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[23].Value = ((string)(LOT_NO8));
            }
            if ((LOT_NO9 == null)) {
                this.Adapter.InsertCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[24].Value = ((string)(LOT_NO9));
            }
            if ((LOT_NO10 == null)) {
                this.Adapter.InsertCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[25].Value = ((string)(LOT_NO10));
            }
            if ((LOT_NO11 == null)) {
                this.Adapter.InsertCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[26].Value = ((string)(LOT_NO11));
            }
            if ((LOT_NO12 == null)) {
                this.Adapter.InsertCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[27].Value = ((string)(LOT_NO12));
            }
            if ((AMOUNT1 == null)) {
                this.Adapter.InsertCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[28].Value = ((string)(AMOUNT1));
            }
            if ((AMOUNT2 == null)) {
                this.Adapter.InsertCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[29].Value = ((string)(AMOUNT2));
            }
            if ((AMOUNT3 == null)) {
                this.Adapter.InsertCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[30].Value = ((string)(AMOUNT3));
            }
            if ((AMOUNT4 == null)) {
                this.Adapter.InsertCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[31].Value = ((string)(AMOUNT4));
            }
            if ((AMOUNT5 == null)) {
                this.Adapter.InsertCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[32].Value = ((string)(AMOUNT5));
            }
            if ((AMOUNT6 == null)) {
                this.Adapter.InsertCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[33].Value = ((string)(AMOUNT6));
            }
            if ((AMOUNT7 == null)) {
                this.Adapter.InsertCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[34].Value = ((string)(AMOUNT7));
            }
            if ((AMOUNT8 == null)) {
                this.Adapter.InsertCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[35].Value = ((string)(AMOUNT8));
            }
            if ((AMOUNT9 == null)) {
                this.Adapter.InsertCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[36].Value = ((string)(AMOUNT9));
            }
            if ((AMOUNT10 == null)) {
                this.Adapter.InsertCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[37].Value = ((string)(AMOUNT10));
            }
            if ((AMOUNT11 == null)) {
                this.Adapter.InsertCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[38].Value = ((string)(AMOUNT11));
            }
            if ((AMOUNT12 == null)) {
                this.Adapter.InsertCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[39].Value = ((string)(AMOUNT12));
            }
            if ((LOADED_BY1 == null)) {
                this.Adapter.InsertCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[40].Value = ((string)(LOADED_BY1));
            }
            if ((LOADED_BY2 == null)) {
                this.Adapter.InsertCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[41].Value = ((string)(LOADED_BY2));
            }
            if ((LOADED_BY3 == null)) {
                this.Adapter.InsertCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[42].Value = ((string)(LOADED_BY3));
            }
            if ((LOADED_BY4 == null)) {
                this.Adapter.InsertCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[43].Value = ((string)(LOADED_BY4));
            }
            if ((LOADED_BY5 == null)) {
                this.Adapter.InsertCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[44].Value = ((string)(LOADED_BY5));
            }
            if ((LOADED_BY6 == null)) {
                this.Adapter.InsertCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[45].Value = ((string)(LOADED_BY6));
            }
            if ((LOADED_BY7 == null)) {
                this.Adapter.InsertCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[46].Value = ((string)(LOADED_BY7));
            }
            if ((LOADED_BY8 == null)) {
                this.Adapter.InsertCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[47].Value = ((string)(LOADED_BY8));
            }
            if ((LOADED_BY9 == null)) {
                this.Adapter.InsertCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[48].Value = ((string)(LOADED_BY9));
            }
            if ((LOADED_BY10 == null)) {
                this.Adapter.InsertCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[49].Value = ((string)(LOADED_BY10));
            }
            if ((LOADED_BY11 == null)) {
                this.Adapter.InsertCommand.Parameters[50].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[50].Value = ((string)(LOADED_BY11));
            }
            if ((LOADED_BY12 == null)) {
                this.Adapter.InsertCommand.Parameters[51].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[51].Value = ((string)(LOADED_BY12));
            }
            if ((MIXING_INSTRUCTIONS == null)) {
                this.Adapter.InsertCommand.Parameters[52].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[52].Value = ((string)(MIXING_INSTRUCTIONS));
            }
            if ((TYPE_OF_DRUM == null)) {
                this.Adapter.InsertCommand.Parameters[53].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[53].Value = ((string)(TYPE_OF_DRUM));
            }
            if ((WEIGHT_PER_DRUM == null)) {
                this.Adapter.InsertCommand.Parameters[54].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[54].Value = ((string)(WEIGHT_PER_DRUM));
            }
            if ((NUMBER_OF_DRUMS == null)) {
                this.Adapter.InsertCommand.Parameters[55].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[55].Value = ((string)(NUMBER_OF_DRUMS));
            }
            if ((WEIGHT_PRODUCED == null)) {
                this.Adapter.InsertCommand.Parameters[56].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[56].Value = ((string)(WEIGHT_PRODUCED));
            }
            if ((REVISION_DATE == null)) {
                this.Adapter.InsertCommand.Parameters[57].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[57].Value = ((string)(REVISION_DATE));
            }
            if ((FORM_VERSION == null)) {
                this.Adapter.InsertCommand.Parameters[58].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[58].Value = ((string)(FORM_VERSION));
            }
            if ((MIXER_BATCH_SHEET == null)) {
                this.Adapter.InsertCommand.Parameters[59].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[59].Value = ((string)(MIXER_BATCH_SHEET));
            }
            if ((INST2 == null)) {
                this.Adapter.InsertCommand.Parameters[60].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[60].Value = ((string)(INST2));
            }
            if ((SAMPLE_AND_LABEL == null)) {
                this.Adapter.InsertCommand.Parameters[61].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[61].Value = ((string)(SAMPLE_AND_LABEL));
            }
            if ((INGRED == null)) {
                this.Adapter.InsertCommand.Parameters[62].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[62].Value = ((string)(INGRED));
            }
            if ((POT_FORMULA == null)) {
                this.Adapter.InsertCommand.Parameters[63].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[63].Value = ((string)(POT_FORMULA));
            }
            if ((BLADE_SPEED == null)) {
                this.Adapter.InsertCommand.Parameters[64].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[64].Value = ((string)(BLADE_SPEED));
            }
            if ((SPEED == null)) {
                this.Adapter.InsertCommand.Parameters[65].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[65].Value = ((string)(SPEED));
            }
            if ((PRESS_DATA == null)) {
                this.Adapter.InsertCommand.Parameters[66].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[66].Value = ((string)(PRESS_DATA));
            }
            if ((EXPIRATION_DATE == null)) {
                this.Adapter.InsertCommand.Parameters[67].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[67].Value = ((string)(EXPIRATION_DATE));
            }
            if ((STORAGE == null)) {
                this.Adapter.InsertCommand.Parameters[68].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[68].Value = ((string)(STORAGE));
            }
            if ((THEOR_WT == null)) {
                this.Adapter.InsertCommand.Parameters[69].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[69].Value = ((string)(THEOR_WT));
            }
            if ((OPER == null)) {
                this.Adapter.InsertCommand.Parameters[70].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[70].Value = ((string)(OPER));
            }
            if ((OPER_Copy == null)) {
                this.Adapter.InsertCommand.Parameters[71].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[71].Value = ((string)(OPER_Copy));
            }
            if ((Adage_Item_Code == null)) {
                this.Adapter.InsertCommand.Parameters[72].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[72].Value = ((string)(Adage_Item_Code));
            }
            if ((LastUpdate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[73].Value = ((System.DateTime)(LastUpdate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[73].Value = global::System.DBNull.Value;
            }
            if ((WhichUser == null)) {
                this.Adapter.InsertCommand.Parameters[74].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[74].Value = ((string)(WhichUser));
            }
            if ((NameofMachine == null)) {
                this.Adapter.InsertCommand.Parameters[75].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[75].Value = ((string)(NameofMachine));
            }
            if ((COMMENTS == null)) {
                this.Adapter.InsertCommand.Parameters[76].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[76].Value = ((string)(COMMENTS));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string DATE, 
                    string MIXER, 
                    string GRADE, 
                    string BATCH_NUMBER, 
                    string INGREDIENT1, 
                    string INGREDIENT2, 
                    string INGREDIENT3, 
                    string INGREDIENT4, 
                    string INGREDIENT5, 
                    string INGREDIENT6, 
                    string INGREDIENT7, 
                    string INGREDIENT8, 
                    string INGREDIENT9, 
                    string INGREDIENT10, 
                    string INGREDIENT11, 
                    string INGREDIENT12, 
                    string LOT_NO1, 
                    string LOT_NO2, 
                    string LOT_NO3, 
                    string LOT_NO4, 
                    string LOT_NO5, 
                    string LOT_NO6, 
                    string LOT_NO7, 
                    string LOT_NO8, 
                    string LOT_NO9, 
                    string LOT_NO10, 
                    string LOT_NO11, 
                    string LOT_NO12, 
                    string AMOUNT1, 
                    string AMOUNT2, 
                    string AMOUNT3, 
                    string AMOUNT4, 
                    string AMOUNT5, 
                    string AMOUNT6, 
                    string AMOUNT7, 
                    string AMOUNT8, 
                    string AMOUNT9, 
                    string AMOUNT10, 
                    string AMOUNT11, 
                    string AMOUNT12, 
                    string LOADED_BY1, 
                    string LOADED_BY2, 
                    string LOADED_BY3, 
                    string LOADED_BY4, 
                    string LOADED_BY5, 
                    string LOADED_BY6, 
                    string LOADED_BY7, 
                    string LOADED_BY8, 
                    string LOADED_BY9, 
                    string LOADED_BY10, 
                    string LOADED_BY11, 
                    string LOADED_BY12, 
                    string MIXING_INSTRUCTIONS, 
                    string TYPE_OF_DRUM, 
                    string WEIGHT_PER_DRUM, 
                    string NUMBER_OF_DRUMS, 
                    string WEIGHT_PRODUCED, 
                    string REVISION_DATE, 
                    string FORM_VERSION, 
                    string MIXER_BATCH_SHEET, 
                    string INST2, 
                    string SAMPLE_AND_LABEL, 
                    string INGRED, 
                    string POT_FORMULA, 
                    string BLADE_SPEED, 
                    string SPEED, 
                    string PRESS_DATA, 
                    string EXPIRATION_DATE, 
                    string STORAGE, 
                    string THEOR_WT, 
                    string OPER, 
                    string OPER_Copy, 
                    string Adage_Item_Code, 
                    global::System.Nullable<global::System.DateTime> LastUpdate, 
                    string WhichUser, 
                    string NameofMachine, 
                    string COMMENTS, 
                    int Original_Row) {
            if ((DATE == null)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(DATE));
            }
            if ((MIXER == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(MIXER));
            }
            if ((GRADE == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(GRADE));
            }
            if ((BATCH_NUMBER == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(BATCH_NUMBER));
            }
            if ((INGREDIENT1 == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(INGREDIENT1));
            }
            if ((INGREDIENT2 == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(INGREDIENT2));
            }
            if ((INGREDIENT3 == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(INGREDIENT3));
            }
            if ((INGREDIENT4 == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(INGREDIENT4));
            }
            if ((INGREDIENT5 == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(INGREDIENT5));
            }
            if ((INGREDIENT6 == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(INGREDIENT6));
            }
            if ((INGREDIENT7 == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(INGREDIENT7));
            }
            if ((INGREDIENT8 == null)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(INGREDIENT8));
            }
            if ((INGREDIENT9 == null)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(INGREDIENT9));
            }
            if ((INGREDIENT10 == null)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(INGREDIENT10));
            }
            if ((INGREDIENT11 == null)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(INGREDIENT11));
            }
            if ((INGREDIENT12 == null)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(INGREDIENT12));
            }
            if ((LOT_NO1 == null)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(LOT_NO1));
            }
            if ((LOT_NO2 == null)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(LOT_NO2));
            }
            if ((LOT_NO3 == null)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(LOT_NO3));
            }
            if ((LOT_NO4 == null)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(LOT_NO4));
            }
            if ((LOT_NO5 == null)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(LOT_NO5));
            }
            if ((LOT_NO6 == null)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((string)(LOT_NO6));
            }
            if ((LOT_NO7 == null)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(LOT_NO7));
            }
            if ((LOT_NO8 == null)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((string)(LOT_NO8));
            }
            if ((LOT_NO9 == null)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((string)(LOT_NO9));
            }
            if ((LOT_NO10 == null)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((string)(LOT_NO10));
            }
            if ((LOT_NO11 == null)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((string)(LOT_NO11));
            }
            if ((LOT_NO12 == null)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((string)(LOT_NO12));
            }
            if ((AMOUNT1 == null)) {
                this.Adapter.UpdateCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((string)(AMOUNT1));
            }
            if ((AMOUNT2 == null)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((string)(AMOUNT2));
            }
            if ((AMOUNT3 == null)) {
                this.Adapter.UpdateCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((string)(AMOUNT3));
            }
            if ((AMOUNT4 == null)) {
                this.Adapter.UpdateCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((string)(AMOUNT4));
            }
            if ((AMOUNT5 == null)) {
                this.Adapter.UpdateCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((string)(AMOUNT5));
            }
            if ((AMOUNT6 == null)) {
                this.Adapter.UpdateCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((string)(AMOUNT6));
            }
            if ((AMOUNT7 == null)) {
                this.Adapter.UpdateCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((string)(AMOUNT7));
            }
            if ((AMOUNT8 == null)) {
                this.Adapter.UpdateCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((string)(AMOUNT8));
            }
            if ((AMOUNT9 == null)) {
                this.Adapter.UpdateCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((string)(AMOUNT9));
            }
            if ((AMOUNT10 == null)) {
                this.Adapter.UpdateCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((string)(AMOUNT10));
            }
            if ((AMOUNT11 == null)) {
                this.Adapter.UpdateCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((string)(AMOUNT11));
            }
            if ((AMOUNT12 == null)) {
                this.Adapter.UpdateCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((string)(AMOUNT12));
            }
            if ((LOADED_BY1 == null)) {
                this.Adapter.UpdateCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((string)(LOADED_BY1));
            }
            if ((LOADED_BY2 == null)) {
                this.Adapter.UpdateCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((string)(LOADED_BY2));
            }
            if ((LOADED_BY3 == null)) {
                this.Adapter.UpdateCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((string)(LOADED_BY3));
            }
            if ((LOADED_BY4 == null)) {
                this.Adapter.UpdateCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((string)(LOADED_BY4));
            }
            if ((LOADED_BY5 == null)) {
                this.Adapter.UpdateCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((string)(LOADED_BY5));
            }
            if ((LOADED_BY6 == null)) {
                this.Adapter.UpdateCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[45].Value = ((string)(LOADED_BY6));
            }
            if ((LOADED_BY7 == null)) {
                this.Adapter.UpdateCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[46].Value = ((string)(LOADED_BY7));
            }
            if ((LOADED_BY8 == null)) {
                this.Adapter.UpdateCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[47].Value = ((string)(LOADED_BY8));
            }
            if ((LOADED_BY9 == null)) {
                this.Adapter.UpdateCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[48].Value = ((string)(LOADED_BY9));
            }
            if ((LOADED_BY10 == null)) {
                this.Adapter.UpdateCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[49].Value = ((string)(LOADED_BY10));
            }
            if ((LOADED_BY11 == null)) {
                this.Adapter.UpdateCommand.Parameters[50].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[50].Value = ((string)(LOADED_BY11));
            }
            if ((LOADED_BY12 == null)) {
                this.Adapter.UpdateCommand.Parameters[51].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[51].Value = ((string)(LOADED_BY12));
            }
            if ((MIXING_INSTRUCTIONS == null)) {
                this.Adapter.UpdateCommand.Parameters[52].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[52].Value = ((string)(MIXING_INSTRUCTIONS));
            }
            if ((TYPE_OF_DRUM == null)) {
                this.Adapter.UpdateCommand.Parameters[53].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[53].Value = ((string)(TYPE_OF_DRUM));
            }
            if ((WEIGHT_PER_DRUM == null)) {
                this.Adapter.UpdateCommand.Parameters[54].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[54].Value = ((string)(WEIGHT_PER_DRUM));
            }
            if ((NUMBER_OF_DRUMS == null)) {
                this.Adapter.UpdateCommand.Parameters[55].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[55].Value = ((string)(NUMBER_OF_DRUMS));
            }
            if ((WEIGHT_PRODUCED == null)) {
                this.Adapter.UpdateCommand.Parameters[56].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[56].Value = ((string)(WEIGHT_PRODUCED));
            }
            if ((REVISION_DATE == null)) {
                this.Adapter.UpdateCommand.Parameters[57].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[57].Value = ((string)(REVISION_DATE));
            }
            if ((FORM_VERSION == null)) {
                this.Adapter.UpdateCommand.Parameters[58].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[58].Value = ((string)(FORM_VERSION));
            }
            if ((MIXER_BATCH_SHEET == null)) {
                this.Adapter.UpdateCommand.Parameters[59].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[59].Value = ((string)(MIXER_BATCH_SHEET));
            }
            if ((INST2 == null)) {
                this.Adapter.UpdateCommand.Parameters[60].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[60].Value = ((string)(INST2));
            }
            if ((SAMPLE_AND_LABEL == null)) {
                this.Adapter.UpdateCommand.Parameters[61].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[61].Value = ((string)(SAMPLE_AND_LABEL));
            }
            if ((INGRED == null)) {
                this.Adapter.UpdateCommand.Parameters[62].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[62].Value = ((string)(INGRED));
            }
            if ((POT_FORMULA == null)) {
                this.Adapter.UpdateCommand.Parameters[63].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[63].Value = ((string)(POT_FORMULA));
            }
            if ((BLADE_SPEED == null)) {
                this.Adapter.UpdateCommand.Parameters[64].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[64].Value = ((string)(BLADE_SPEED));
            }
            if ((SPEED == null)) {
                this.Adapter.UpdateCommand.Parameters[65].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[65].Value = ((string)(SPEED));
            }
            if ((PRESS_DATA == null)) {
                this.Adapter.UpdateCommand.Parameters[66].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[66].Value = ((string)(PRESS_DATA));
            }
            if ((EXPIRATION_DATE == null)) {
                this.Adapter.UpdateCommand.Parameters[67].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[67].Value = ((string)(EXPIRATION_DATE));
            }
            if ((STORAGE == null)) {
                this.Adapter.UpdateCommand.Parameters[68].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[68].Value = ((string)(STORAGE));
            }
            if ((THEOR_WT == null)) {
                this.Adapter.UpdateCommand.Parameters[69].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[69].Value = ((string)(THEOR_WT));
            }
            if ((OPER == null)) {
                this.Adapter.UpdateCommand.Parameters[70].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[70].Value = ((string)(OPER));
            }
            if ((OPER_Copy == null)) {
                this.Adapter.UpdateCommand.Parameters[71].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[71].Value = ((string)(OPER_Copy));
            }
            if ((Adage_Item_Code == null)) {
                this.Adapter.UpdateCommand.Parameters[72].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[72].Value = ((string)(Adage_Item_Code));
            }
            if ((LastUpdate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[73].Value = ((System.DateTime)(LastUpdate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[73].Value = global::System.DBNull.Value;
            }
            if ((WhichUser == null)) {
                this.Adapter.UpdateCommand.Parameters[74].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[74].Value = ((string)(WhichUser));
            }
            if ((NameofMachine == null)) {
                this.Adapter.UpdateCommand.Parameters[75].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[75].Value = ((string)(NameofMachine));
            }
            if ((COMMENTS == null)) {
                this.Adapter.UpdateCommand.Parameters[76].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[76].Value = ((string)(COMMENTS));
            }
            this.Adapter.UpdateCommand.Parameters[77].Value = ((int)(Original_Row));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private BATCH_SHEETS_NewTableAdapter _bATCH_SHEETS_NewTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public BATCH_SHEETS_NewTableAdapter BATCH_SHEETS_NewTableAdapter {
            get {
                return this._bATCH_SHEETS_NewTableAdapter;
            }
            set {
                this._bATCH_SHEETS_NewTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._bATCH_SHEETS_NewTableAdapter != null) 
                            && (this._bATCH_SHEETS_NewTableAdapter.Connection != null))) {
                    return this._bATCH_SHEETS_NewTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._bATCH_SHEETS_NewTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private int UpdateUpdatedRows(DataSet2 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._bATCH_SHEETS_NewTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.BATCH_SHEETS_New.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._bATCH_SHEETS_NewTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private int UpdateInsertedRows(DataSet2 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._bATCH_SHEETS_NewTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.BATCH_SHEETS_New.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._bATCH_SHEETS_NewTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private int UpdateDeletedRows(DataSet2 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._bATCH_SHEETS_NewTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.BATCH_SHEETS_New.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._bATCH_SHEETS_NewTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public virtual int UpdateAll(DataSet2 dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._bATCH_SHEETS_NewTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._bATCH_SHEETS_NewTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._bATCH_SHEETS_NewTableAdapter != null)) {
                    revertConnections.Add(this._bATCH_SHEETS_NewTableAdapter, this._bATCH_SHEETS_NewTableAdapter.Connection);
                    this._bATCH_SHEETS_NewTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._bATCH_SHEETS_NewTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._bATCH_SHEETS_NewTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._bATCH_SHEETS_NewTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._bATCH_SHEETS_NewTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._bATCH_SHEETS_NewTableAdapter != null)) {
                    this._bATCH_SHEETS_NewTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._bATCH_SHEETS_NewTableAdapter]));
                    this._bATCH_SHEETS_NewTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591